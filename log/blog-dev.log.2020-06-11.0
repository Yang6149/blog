2020-06-11 21:49:11.993  INFO 17560 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 17560 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-06-11 21:49:12.012 DEBUG 17560 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-06-11 21:49:12.013  INFO 17560 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-06-11 21:49:12.150  INFO 17560 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-06-11 21:49:12.151  INFO 17560 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-11 21:49:12.152  INFO 17560 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-11 21:49:13.641  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 21:49:13.646  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-06-11 21:49:13.776  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 21:49:13.780  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 21:49:13.782  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 21:49:13.785  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 21:49:13.788  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 21:49:13.793  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 129ms. Found 0 Elasticsearch repository interfaces.
2020-06-11 21:49:13.800  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 21:49:13.801  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-06-11 21:49:13.823  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 21:49:13.824  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 21:49:13.825  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 21:49:13.826  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 21:49:13.827  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 21:49:13.827  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-06-11 21:49:13.843  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 21:49:13.843  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-06-11 21:49:14.001  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 152ms. Found 5 JPA repository interfaces.
2020-06-11 21:49:14.069  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 21:49:14.073  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-11 21:49:14.155  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 21:49:14.161  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 21:49:14.163  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 21:49:14.164  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 21:49:14.166  INFO 17560 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 21:49:14.168  INFO 17560 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71ms. Found 0 Redis repository interfaces.
2020-06-11 21:49:15.229  INFO 17560 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-11 21:49:17.352  INFO 17560 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-06-11 21:49:17.375  INFO 17560 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-11 21:49:17.376  INFO 17560 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-11 21:49:17.383  INFO 17560 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-06-11 21:49:17.383  INFO 17560 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-06-11 21:49:17.384  INFO 17560 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-06-11 21:49:17.389  INFO 17560 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-06-11 21:49:17.723  INFO 17560 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-11 21:49:17.723  INFO 17560 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5571 ms
2020-06-11 21:49:18.343  INFO 17560 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-06-11 21:49:18.598  INFO 17560 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-06-11 21:49:18.952  INFO 17560 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-06-11 21:49:19.175  INFO 17560 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-06-11 21:49:19.404  INFO 17560 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-06-11 21:49:19.433  INFO 17560 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-06-11 21:49:20.858  INFO 17560 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-06-11 21:49:20.867  INFO 17560 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-06-11 21:49:20.961  INFO 17560 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-06-11 21:49:22.421  WARN 17560 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-06-11 21:49:22.737  INFO 17560 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-06-11 21:49:22.924  INFO 17560 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-06-11 21:49:24.472  INFO 17560 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-06-11 21:49:24.475  INFO 17560 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 14.243 seconds (JVM running for 17.688)
2020-06-11 21:57:05.475  INFO 17560 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-11 21:57:05.477  INFO 17560 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-06-11 21:57:05.550  INFO 17560 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 72 ms
2020-06-11 21:57:05.671  INFO 17560 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 21:57:06.251  INFO 17560 --- [http-nio-8080-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-06-11 21:57:06.254  INFO 17560 --- [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-06-11 21:57:13.708  INFO 17560 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 21:57:13.709  INFO 17560 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 21:57:19.810  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 21:57:19.917  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 21:57:19.917  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:12:03.944  WARN 17560 --- [http-nio-8080-exec-8] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [681] milliseconds.
2020-06-11 22:12:04.554  INFO 17560 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:12:04.573  INFO 17560 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:12:04.574  INFO 17560 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:12:05.669  INFO 17560 --- [http-nio-8080-exec-8] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:12:06.448  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:12:06.466  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:12:06.467  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:12:09.180  INFO 17560 --- [http-nio-8080-exec-8] com.yang.blog.web.admin.BlogController   : 增加blog
2020-06-11 22:12:09.520  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:12:09.534  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:12:09.535  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:13:26.328 ERROR 17560 --- [http-nio-8080-exec-8] c.y.b.h.ControllerExceptionHandler       : Request URL+http://localhost:8080/admin/blogs,Exception {}

java.lang.NumberFormatException: For input string: ""
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.parseLong(Long.java:824)
	at com.yang.blog.service.TagServiceImpl.strConver2List(TagServiceImpl.java:67)
	at com.yang.blog.service.TagServiceImpl.listTag(TagServiceImpl.java:55)
	at com.yang.blog.web.admin.BlogController.post(BlogController.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-06-11 22:13:26.330  WARN 17560 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NumberFormatException: For input string: ""]
2020-06-11 22:14:12.775  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-06-11 22:14:12.861  INFO 17560 --- [http-nio-8080-exec-3] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:14:13.260  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:14:13.275  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:14:13.276  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:14:19.582  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:14:19.999  INFO 17560 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:14:20.017  INFO 17560 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:14:20.017  INFO 17560 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:14:22.340  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.web.admin.BlogController   : 增加blog
2020-06-11 22:14:22.753  INFO 17560 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:14:22.769  INFO 17560 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:14:22.770  INFO 17560 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:14:23.992  INFO 17560 --- [http-nio-8080-exec-10] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:14:24.483  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:14:24.503  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:14:24.504  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:14:26.777  INFO 17560 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:14:26.827  INFO 17560 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:14:26.828  INFO 17560 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:14:27.989  INFO 17560 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:14:28.005  INFO 17560 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:14:28.005  INFO 17560 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:15:13.355  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.AboutController.about', args=[]}
2020-06-11 22:15:13.361  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:15:13.362  INFO 17560 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn about
2020-06-11 22:15:14.146  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:15:14.160  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:15:14.160  INFO 17560 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:15:17.514  INFO 17560 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:15:17.550  INFO 17560 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:15:17.550  INFO 17560 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:15:18.843  INFO 17560 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:15:18.857  INFO 17560 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:15:18.858  INFO 17560 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:15:59.802  INFO 17560 --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler  : null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。

java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:276)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:233)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:223)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:358)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:247)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1147)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-06-11 22:15:59.972  INFO 17560 --- [lettuce-eventExecutorLoop-1-1] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/127.0.0.1:6379
2020-06-11 22:16:02.019  WARN 17560 --- [lettuce-nioEventLoop-4-2] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost:6379]: Connection refused: no further information: localhost/127.0.0.1:6379
2020-06-11 22:16:06.254  INFO 17560 --- [lettuce-eventExecutorLoop-1-4] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost:6379
2020-06-11 22:16:08.284  WARN 17560 --- [lettuce-nioEventLoop-4-1] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost:6379]: Connection refused: no further information: localhost/127.0.0.1:6379
2020-06-11 22:16:12.652  INFO 17560 --- [lettuce-eventExecutorLoop-1-3] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost:6379
2020-06-11 22:16:14.677  WARN 17560 --- [lettuce-nioEventLoop-4-4] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost:6379]: Connection refused: no further information: localhost/127.0.0.1:6379
2020-06-11 22:16:20.015  INFO 17560 --- [lettuce-eventExecutorLoop-1-2] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost:6379
2020-06-11 22:17:04.932  INFO 16072 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 16072 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-06-11 22:17:04.937 DEBUG 16072 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-06-11 22:17:04.938  INFO 16072 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-06-11 22:17:05.036  INFO 16072 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-06-11 22:17:05.038  INFO 16072 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-11 22:17:05.039  INFO 16072 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-11 22:17:07.244  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:17:07.248  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-06-11 22:17:07.407  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:17:07.411  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:17:07.413  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:17:07.416  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:17:07.419  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:17:07.421  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 157ms. Found 0 Elasticsearch repository interfaces.
2020-06-11 22:17:07.436  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:17:07.437  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-06-11 22:17:07.477  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:17:07.479  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:17:07.480  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:17:07.482  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:17:07.489  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:17:07.490  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-06-11 22:17:07.513  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:17:07.514  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-06-11 22:17:07.664  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 138ms. Found 5 JPA repository interfaces.
2020-06-11 22:17:07.693  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:17:07.695  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-11 22:17:07.732  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:17:07.733  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:17:07.734  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:17:07.738  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:17:07.740  INFO 16072 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:17:07.741  INFO 16072 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2020-06-11 22:17:08.564  INFO 16072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-11 22:17:09.672  INFO 16072 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-06-11 22:17:09.691  INFO 16072 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-11 22:17:09.692  INFO 16072 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-11 22:17:09.696  INFO 16072 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-06-11 22:17:09.696  INFO 16072 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-06-11 22:17:09.697  INFO 16072 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-06-11 22:17:09.704  INFO 16072 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-06-11 22:17:09.972  INFO 16072 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-11 22:17:09.972  INFO 16072 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4933 ms
2020-06-11 22:17:10.427  INFO 16072 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-06-11 22:17:10.559  INFO 16072 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-06-11 22:17:10.757  INFO 16072 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-06-11 22:17:10.921  INFO 16072 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-06-11 22:17:11.132  INFO 16072 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-06-11 22:17:11.158  INFO 16072 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-06-11 22:17:12.733  INFO 16072 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-06-11 22:17:12.743  INFO 16072 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-06-11 22:17:12.847  INFO 16072 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-06-11 22:17:14.735  WARN 16072 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-06-11 22:17:16.553  INFO 16072 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-06-11 22:17:17.007  INFO 16072 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-06-11 22:17:19.311  INFO 16072 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-06-11 22:17:19.315  INFO 16072 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 16.936 seconds (JVM running for 21.074)
2020-06-11 22:17:23.634  INFO 16072 --- [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-11 22:17:23.636  INFO 16072 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-06-11 22:17:23.666  INFO 16072 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 30 ms
2020-06-11 22:17:23.756  INFO 16072 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:17:24.233  INFO 16072 --- [http-nio-8080-exec-3] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-06-11 22:17:24.236  INFO 16072 --- [http-nio-8080-exec-3] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-06-11 22:17:26.519  INFO 16072 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:17:26.520  INFO 16072 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:17:31.809  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:17:31.932  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:17:31.933  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:24:50.720  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/blog/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.blog', args=[66, {}]}
2020-06-11 22:24:50.969  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=66, title='线程池', content='<h1 id="threadpoolexecutor执行的过程">ThreadPoolExecutor执行的过程</h1>
<p>探究Executor</p>
<p>核心线程数1</p>
<p>最大线程数1</p>
<p>阻塞队列1</p>
<p>调用方法为sleep一个小时</p>
<h2 id="第一次execute">第一次execute</h2>
<p>查看当前worker的数量是否小于核心线程数量。小于的话就addWorker(Runnable,core=true)</p>
<p>进入addWorker后查看当前缓冲池的状态，是否shutdown之类的。</p>
<p>再次判断核心线程数、最大线程数等一些列判断条件之后，如果可以增加Worker就调用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/180338-280440.png" alt="1591869815953" /></p>
<p>CAS的增加一个Worker数量，保存当前状态，再退出循环</p>
<p>紧接着初始化一个worker</p>
<p>获取一个锁mainLock，接着再次判断线程池状态。</p>
<p>workers是一个Set里面包含现有的worker，把刚才的worker 加进去，更新最大线程池size</p>
<p>解锁，设workerAdded=true</p>
<p>如果workerAdded=true，就直接run这个任务</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/181708-87152.png" alt="1591870409222" /></p>
<h2 id="第二次exectue">第二次exectue</h2>
<p>查看当前worker数量不小于核心线程数量，然后判断下当前的状态直接往阻塞队列里仍，如果返回true则代表加入成功</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/182109-210818.png" alt="1591870869214" /></p>
<p>接着无事发生，直接退出。</p>
<h2 id="第三次execute">第三次execute</h2>
<p>和上一步一模一样只不过由于队列慢了进不了if代码块</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/182822-2768.png" alt="1591871300549" /></p>
<p>进入了addWorker里面，core=false</p>
<p>接着还是和第一次execute一样通过CAS更新pool的状态，跳出循环</p>
<p>紧接着初始化一个worker，加入到Set中，然后run该线程</p>
<h2 id="第四次exectute">第四次exectute</h2>
<p>会经过一些状态判断调用reject(command)</p>
<p>然后调用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/183538-951016.png" alt="1591871736302" /></p>
<h2 id="当1或3执行完后取新任务">当1或3执行完后，取新任务</h2>
<p>由于创建好的线程会调用run，里面有个while循环，第一行getTask会去取当前队列中的任务，如果为空就阻塞，如果不为空就取任务执行。</p>
<p>由此我们可以看出这个阻塞队列永远只有 取阻塞 没有 存阻塞 ，因为会根据状态判断执行reject</p>
<pre><code class="language-java">while (task != null || (task = getTask()) != null) {
    w.lock();
    // If pool is stopping, ensure thread is interrupted;
    // if not, ensure thread is not interrupted.  This
    // requires a recheck in second case to deal with
    // shutdownNow race while clearing interrupt
    if ((runStateAtLeast(ctl.get(), STOP) ||
         (Thread.interrupted() &amp;&amp;
          runStateAtLeast(ctl.get(), STOP))) &amp;&amp;
        !wt.isInterrupted())
        wt.interrupt();
    try {
        beforeExecute(wt, task);
        try {
            task.run();
            afterExecute(task, null);
        } catch (Throwable ex) {
            afterExecute(task, ex);
            throw ex;
        }
    } finally {
        task = null;
        w.completedTasks++;
        w.unlock();
    }
}
</code></pre>
<h2 id="前面太乱不看">前面太乱不看</h2>
<ol>
<li>第一次执行：Runnable赋给worker.thread直接运行</li>
<li>第二次执行：Runnable赋给worker.thread加入到阻塞队列</li>
<li>第三次执行：Runnable赋给worker.thread直接运行</li>
<li>第四次执行：调用拒绝策略</li>
</ol>
<p>当线程启动后就不会停止，执行完后会马上去取新任务。</p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=2, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-06-11 22:14:13.0, updateTime=2020-06-11 22:14:13.0}
2020-06-11 22:24:50.970  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:24:50.970  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-06-11 22:24:52.738  INFO 16072 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:24:52.760  INFO 16072 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:24:52.760  INFO 16072 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:24:53.567  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[66, {}]}
2020-06-11 22:24:53.644  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:24:53.644  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:25:15.762  WARN 16072 --- [http-nio-8080-exec-4] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [683] milliseconds.
2020-06-11 22:25:15.767  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comment', args=[Comment{id=null, nickname='杨申', email='yangshen614@gmail.com', content='热评！', avatar='null', createTime=null}, org.apache.catalina.session.StandardSessionFacade@1a5a359f]}
2020-06-11 22:25:15.799  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:25:15.799  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn redirect:/comments/66
2020-06-11 22:25:15.821  INFO 16072 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[66, {}]}
2020-06-11 22:25:15.833  INFO 16072 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:25:15.834  INFO 16072 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:25:43.820  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comment', args=[Comment{id=null, nickname='杨申', email='yangshen614@gmail.com', content='回复2', avatar='null', createTime=null}, org.apache.catalina.session.StandardSessionFacade@1a5a359f]}
2020-06-11 22:25:43.843  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:25:43.844  INFO 16072 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn redirect:/comments/66
2020-06-11 22:25:43.853  INFO 16072 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[66, {}]}
2020-06-11 22:25:43.864  INFO 16072 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:25:43.864  INFO 16072 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:26:12.729  INFO 16072 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:26:12.804  INFO 16072 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:26:12.804  INFO 16072 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:26:14.152  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:26:14.170  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:26:14.170  INFO 16072 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:26:19.267  INFO 16072 --- [lettuce-nioEventLoop-4-1] io.lettuce.core.protocol.CommandHandler  : null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。

java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:276)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:233)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:223)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:358)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:247)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1147)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-06-11 22:26:19.410  INFO 16072 --- [lettuce-eventExecutorLoop-1-3] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/127.0.0.1:6379
2020-06-11 22:26:21.457  WARN 16072 --- [lettuce-nioEventLoop-4-2] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost:6379]: Connection refused: no further information: localhost/127.0.0.1:6379
2020-06-11 22:26:41.976  INFO 16484 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 16484 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-06-11 22:26:42.033 DEBUG 16484 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-06-11 22:26:42.034  INFO 16484 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-06-11 22:26:42.271  INFO 16484 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-06-11 22:26:42.280  INFO 16484 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-11 22:26:42.283  INFO 16484 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-11 22:26:46.053  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:26:46.056  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-06-11 22:26:46.175  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:26:46.177  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:26:46.184  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:26:46.188  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:26:46.192  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-11 22:26:46.193  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 130ms. Found 0 Elasticsearch repository interfaces.
2020-06-11 22:26:46.206  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:26:46.207  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-06-11 22:26:46.232  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:26:46.233  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:26:46.234  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:26:46.234  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:26:46.235  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-11 22:26:46.236  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-06-11 22:26:46.246  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:26:46.247  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-06-11 22:26:46.394  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 139ms. Found 5 JPA repository interfaces.
2020-06-11 22:26:46.423  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-11 22:26:46.426  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-11 22:26:46.461  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:26:46.462  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:26:46.464  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:26:46.465  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:26:46.465  INFO 16484 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-11 22:26:46.466  INFO 16484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces.
2020-06-11 22:26:47.022  INFO 16484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-11 22:26:47.820  INFO 16484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-06-11 22:26:47.834  INFO 16484 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-11 22:26:47.835  INFO 16484 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-11 22:26:47.841  INFO 16484 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-06-11 22:26:47.841  INFO 16484 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-06-11 22:26:47.842  INFO 16484 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-06-11 22:26:47.848  INFO 16484 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-06-11 22:26:48.020  INFO 16484 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-11 22:26:48.020  INFO 16484 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5736 ms
2020-06-11 22:26:48.358  INFO 16484 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-06-11 22:26:48.486  INFO 16484 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-06-11 22:26:48.710  INFO 16484 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-06-11 22:26:48.936  INFO 16484 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-06-11 22:26:49.220  INFO 16484 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-06-11 22:26:49.253  INFO 16484 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-06-11 22:26:51.724  INFO 16484 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-06-11 22:26:51.739  INFO 16484 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-06-11 22:26:52.014  INFO 16484 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-06-11 22:26:55.078  WARN 16484 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-06-11 22:26:55.664  INFO 16484 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-06-11 22:26:55.853  INFO 16484 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-06-11 22:26:57.953  INFO 16484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-06-11 22:26:57.959  INFO 16484 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 19.018 seconds (JVM running for 22.591)
2020-06-11 22:27:58.635  INFO 16484 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-11 22:27:58.644  INFO 16484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-06-11 22:27:58.724  INFO 16484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 80 ms
2020-06-11 22:27:58.904  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:27:59.756  INFO 16484 --- [http-nio-8080-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-06-11 22:27:59.761  INFO 16484 --- [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-06-11 22:28:08.609  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:28:08.611  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:28:21.944  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:28:22.068  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:28:22.068  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:29:31.085  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:29:31.165  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:29:31.166  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:29:32.943  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:29:32.976  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:29:32.976  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:29:52.579  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 1, size 10, sort: id: DESC], {}]}
2020-06-11 22:29:52.667  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:29:52.667  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:29:53.916  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:29:53.938  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:29:53.939  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:29:56.876  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:29:56.929  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:29:56.930  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:29:58.407  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:29:58.422  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:29:58.423  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:30:13.218  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/types/2', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.TypeSearchController.tags', args=[2, {}, Page request [number: 0, size 10, sort: id: DESC]]}
2020-06-11 22:30:13.290  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:13.292  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn types
2020-06-11 22:30:15.017  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:30:15.034  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:15.034  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:30:18.529  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.TagsSearchController.tags', args=[{}, Page request [number: 0, size 10, sort: id: DESC]]}
2020-06-11 22:30:18.554  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:18.554  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn tags
2020-06-11 22:30:19.848  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:30:19.860  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:19.861  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:30:21.218  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/tags/7', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.TagsSearchController.tags', args=[7, {}, Page request [number: 0, size 10, sort: id: DESC]]}
2020-06-11 22:30:21.264  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:21.265  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn tags
2020-06-11 22:30:22.582  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:30:22.597  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:22.597  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:30:24.961  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:30:25.006  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:25.006  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:30:26.108  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:30:26.124  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:30:26.124  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:31:03.078  WARN 16484 --- [http-nio-8080-exec-7] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [803] milliseconds.
2020-06-11 22:31:03.584  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:31:03.609  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:31:03.609  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:31:05.007  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:31:05.564  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:31:05.576  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:31:05.577  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:31:09.340  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.web.admin.BlogController   : 增加blog
2020-06-11 22:31:10.187  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:31:10.202  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:31:10.202  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:32:34.636  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:32:34.675  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:32:34.675  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:32:35.480  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:32:35.490  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:32:35.490  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:02.485  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:33:02.525  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:02.526  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:33:03.789  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:03.800  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:03.801  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:12.794  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 1, size 10, sort: id: DESC], {}]}
2020-06-11 22:33:12.827  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:12.828  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:33:14.082  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:14.097  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:14.097  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:18.405  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:33:18.437  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:18.438  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:33:19.999  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:20.011  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:20.012  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:33.276  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/types/2', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.TypeSearchController.tags', args=[2, {}, Page request [number: 0, size 10, sort: id: DESC]]}
2020-06-11 22:33:33.293  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:33.293  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn types
2020-06-11 22:33:34.189  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:34.206  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:34.206  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:38.040  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.TagsSearchController.tags', args=[{}, Page request [number: 0, size 10, sort: id: DESC]]}
2020-06-11 22:33:38.047  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:38.047  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn tags
2020-06-11 22:33:39.085  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:39.093  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:39.093  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:44.578  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/tags/7', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.TagsSearchController.tags', args=[7, {}, Page request [number: 0, size 10, sort: id: DESC]]}
2020-06-11 22:33:44.593  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:44.593  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn tags
2020-06-11 22:33:46.277  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:46.290  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:46.291  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:53.005  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:33:53.032  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:53.032  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:33:54.177  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:54.188  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:54.188  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:55.365  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/blog/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.blog', args=[66, {}]}
2020-06-11 22:33:55.665  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=66, title='线程池', content='<h1 id="threadpoolexecutor执行的过程">ThreadPoolExecutor执行的过程</h1>
<p>探究Executor</p>
<p>核心线程数1</p>
<p>最大线程数1</p>
<p>阻塞队列1</p>
<p>调用方法为sleep一个小时</p>
<h2 id="第一次execute">第一次execute</h2>
<p>查看当前worker的数量是否小于核心线程数量。小于的话就addWorker(Runnable,core=true)</p>
<p>进入addWorker后查看当前缓冲池的状态，是否shutdown之类的。</p>
<p>再次判断核心线程数、最大线程数等一些列判断条件之后，如果可以增加Worker就调用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/180338-280440.png" alt="1591869815953" /></p>
<p>CAS的增加一个Worker数量，保存当前状态，再退出循环</p>
<p>紧接着初始化一个worker</p>
<p>获取一个锁mainLock，接着再次判断线程池状态。</p>
<p>workers是一个Set里面包含现有的worker，把刚才的worker 加进去，更新最大线程池size</p>
<p>解锁，设workerAdded=true</p>
<p>如果workerAdded=true，就直接run这个任务</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/181708-87152.png" alt="1591870409222" /></p>
<h2 id="第二次exectue">第二次exectue</h2>
<p>查看当前worker数量不小于核心线程数量，然后判断下当前的状态直接往阻塞队列里仍，如果返回true则代表加入成功</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/182109-210818.png" alt="1591870869214" /></p>
<p>接着无事发生，直接退出。</p>
<h2 id="第三次execute">第三次execute</h2>
<p>和上一步一模一样只不过由于队列慢了进不了if代码块</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/182822-2768.png" alt="1591871300549" /></p>
<p>进入了addWorker里面，core=false</p>
<p>接着还是和第一次execute一样通过CAS更新pool的状态，跳出循环</p>
<p>紧接着初始化一个worker，加入到Set中，然后run该线程</p>
<h2 id="第四次exectute">第四次exectute</h2>
<p>会经过一些状态判断调用reject(command)</p>
<p>然后调用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/183538-951016.png" alt="1591871736302" /></p>
<h2 id="当1或3执行完后取新任务">当1或3执行完后，取新任务</h2>
<p>由于创建好的线程会调用run，里面有个while循环，第一行getTask会去取当前队列中的任务，如果为空就阻塞，如果不为空就取任务执行。</p>
<p>由此我们可以看出这个阻塞队列永远只有 取阻塞 没有 存阻塞 ，因为会根据状态判断执行reject</p>
<pre><code class="language-java">while (task != null || (task = getTask()) != null) {
    w.lock();
    // If pool is stopping, ensure thread is interrupted;
    // if not, ensure thread is not interrupted.  This
    // requires a recheck in second case to deal with
    // shutdownNow race while clearing interrupt
    if ((runStateAtLeast(ctl.get(), STOP) ||
         (Thread.interrupted() &amp;&amp;
          runStateAtLeast(ctl.get(), STOP))) &amp;&amp;
        !wt.isInterrupted())
        wt.interrupt();
    try {
        beforeExecute(wt, task);
        try {
            task.run();
            afterExecute(task, null);
        } catch (Throwable ex) {
            afterExecute(task, ex);
            throw ex;
        }
    } finally {
        task = null;
        w.completedTasks++;
        w.unlock();
    }
}
</code></pre>
<h2 id="前面太乱不看">前面太乱不看</h2>
<ol>
<li>第一次执行：Runnable赋给worker.thread直接运行</li>
<li>第二次执行：Runnable赋给worker.thread加入到阻塞队列</li>
<li>第三次执行：Runnable赋给worker.thread直接运行</li>
<li>第四次执行：调用拒绝策略</li>
</ol>
<p>当线程启动后就不会停止，执行完后会马上去取新任务。</p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=3, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-06-11 22:14:13.0, updateTime=2020-06-11 22:14:13.0}
2020-06-11 22:33:55.665  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:55.666  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-06-11 22:33:57.036  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:33:57.049  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:57.050  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:33:57.614  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[66, {}]}
2020-06-11 22:33:57.696  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:33:57.696  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:34:35.548  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comment', args=[Comment{id=null, nickname='yangshen', email='614989768@qq.com', content='评论', avatar='null', createTime=null}, org.apache.catalina.session.StandardSessionFacade@6bcd207e]}
2020-06-11 22:34:35.593  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:34:35.594  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn redirect:/comments/66
2020-06-11 22:34:35.625  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[66, {}]}
2020-06-11 22:34:35.637  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:34:35.637  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:34:43.765  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comment', args=[Comment{id=null, nickname='yangshen', email='614989768@qq.com', content='123', avatar='null', createTime=null}, org.apache.catalina.session.StandardSessionFacade@6bcd207e]}
2020-06-11 22:34:43.791  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:34:43.792  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn redirect:/comments/66
2020-06-11 22:34:43.806  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[66, {}]}
2020-06-11 22:34:43.815  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:34:43.815  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:34:48.022  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comment', args=[Comment{id=null, nickname='yangshen', email='614989768@qq.com', content='123', avatar='null', createTime=null}, org.apache.catalina.session.StandardSessionFacade@6bcd207e]}
2020-06-11 22:34:48.050  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:34:48.051  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn redirect:/comments/66
2020-06-11 22:34:48.074  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/66', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[66, {}]}
2020-06-11 22:34:48.088  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:34:48.088  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:34:58.267  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:34:58.278  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:34:58.279  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:34:59.658  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:35:00.058  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:00.067  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:00.067  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:06.062  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:06.070  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:06.070  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:08.231  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:08.243  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:08.243  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:14.437  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:14.447  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:14.447  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:18.660  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:18.671  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:18.671  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:21.318  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:21.327  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:21.328  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:27.828  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:27.841  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:27.841  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:30.311  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:35:30.935  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:30.943  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:30.944  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:35:39.391  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.web.admin.BlogController   : 增加blog
2020-06-11 22:35:40.062  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:35:40.071  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:35:40.072  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:36:48.748  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-06-11 22:36:48.807  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:36:49.325  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:36:49.334  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:36:49.334  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:36:53.380  INFO 16484 --- [http-nio-8080-exec-7] com.yang.blog.web.admin.BlogController   : 修改blog
2020-06-11 22:36:53.809  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:36:53.820  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:36:53.820  INFO 16484 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:37:00.300  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-06-11 22:37:00.377  INFO 16484 --- [http-nio-8080-exec-1] com.yang.blog.web.admin.BlogController   : 访问list
2020-06-11 22:37:01.336  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:37:01.347  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:01.347  INFO 16484 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:37:06.621  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:37:06.653  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:06.653  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:37:08.174  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:37:08.185  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:08.185  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:37:13.619  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/blog/74', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.blog', args=[74, {}]}
2020-06-11 22:37:13.666  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=74, title='MapReduce', content='<h1 id="lab1-mapreduce">lab1 MapReduce</h1>
<p>听完 MIT6.824 第一节课后看到课后有实验，于是就赶忙过去写实验。看了一下实验要求，又滚回去看 paper。</p>
<h2 id="总结">总结</h2>
<p>这次实验要求是使用 go 语言，然后尴尬的是我没有一点 go 语言的基础。但是这难不倒我，直接官方 quic start 走起。大概断断续续的花了两天的时间走完了一遍。（期间忙着复习以及准备面试笔试）</p>
<p>然后根据 paper 上的内容用 go 实现一遍，go 的语法一旦写起来感觉比 Java 爽多了。</p>
<p>期间从最开始上课，到最后写完大概用了十天左右吧，毕竟中间很多时间都在忙其他事情。隔两天来写一写这个，我觉得 15% 时间在学习 10% 时间在编码，剩下的时间全在 debug。</p>
<h2 id="lab-要求">lab 要求</h2>
<p>lab 中提供了要使用的数据以及测试脚本。并且提供了一个串行实现方式。大概看看串行的方式就了解怎么回事了。自己只需要写<code>rpc</code>、<code>master</code>、<code>worker</code>这三个，然后通过 <code>mrmaster</code> 和<code>mrworker</code>调用自己写的函数。lab 中提供了一个建议是使用 json 来作为中间数据存储格式，并且也贴出了简易 demo 。最后的测试用例要求完成</p>
<ul>
<li>和标准答案相同</li>
<li>为每个单词的所在文件通过单词归类（倒排索引）</li>
<li>测试 map 并发</li>
<li>测试 reduce 并发</li>
<li>测试容错</li>
</ul>
<p>最后贴一下测试的结果吧，看着这些 pass 乐半天</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202003/25/194632-900736.png" alt="1585136791397" /></p>
<h2 id="遇到的一些坑">遇到的一些坑</h2>
<h3 id="语法">语法</h3>
<p>首先一点就是对语言的坑了，想要让别人也能访问的到参数，一定要大写首字母。这些还算好，因为在编译的时候会又提醒。最大的坑就是通过 rpc 调用的时候，传入的参数也要对这个大小写有效而且写为小写的化也不会报错更不会传入。</p>
<p>就因为这个我忙活了至少 6 个小时。</p>
<h3 id="master-和-worker-处理的逻辑">master 和 worker 处理的逻辑</h3>
<p>开始我想当然的在脑中构建信息传递逻辑，写也写出来了，运行 master 和单 worker 没毛病。问题就是在并发的状态下，老是处理错误，后来拿纸币重新画图，代码删完重写一遍才跑通。纸上画的更清楚，就不贴出来了。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202006/11/223207-725028.png" alt="1585137003388" /></p>
<h3 id="锁以及超时">锁以及超时</h3>
<p>由于开始我使用的是 master 单线程处理所有数据没有出现问题，重构之后使用了协程为每一次请求做出回应并设立超时，这样可以有效的保证容错，这里也需要加上锁保证安全。</p>
<h2 id="代码">代码</h2>
<p>master</p>
<pre><code class="language-go">package mr

import &quot;log&quot;
import &quot;net&quot;
import &quot;os&quot;
import &quot;net/rpc&quot;
import &quot;net/http&quot;
import &quot;strconv&quot;
import &quot;time&quot;
import &quot;sync&quot;
import &quot;context&quot;
import &quot;fmt&quot;


const(
	isworking = 1
	idle = 2
	commited = 3


)
type Master struct {
	timeout time.Duration
	reduceN int
	mapN int
	mapWork []WorkStatus//
	reduceTable []WorkStatus
	mu sync.RWMutex
	allFinished bool



}
type WorkStatus struct{
	filename string
	status int// 1为完成 0 为未完成  2 等待
	start int64
}

// Your code here -- RPC handlers for the worker to call.
func (m *Master) Handler(args *MyRPCArgs, reply *MyRPCReplay) error {
	m.mu.Lock()
	defer m.mu.Unlock()

	if m.allFinished{
		reply.AllFinished=true;
		return nil
	}


	if args.Status==&quot;apply&quot;{
		reply.MapN=m.mapN
		reply.ReduceN=m.reduceN
		reply.AllFinished=m.allFinished
		//当分配完任务后直接返回，让worker退出
		if m.allFinished{
			return nil
		}
		//开始分配map任务
		for i :=range m.mapWork{
			if m.mapWork[i].status==commited||m.mapWork[i].status==isworking{
				continue
			}
			//当任务还没开始或任务超时时，分配任务
			if m.mapWork[i].status==idle||m.mapWork[i].status==0{
				m.mapWork[i].status=isworking
				reply.Type=1
				reply.Id=i
				reply.Filename=m.mapWork[i].filename
				//设立超时，当前任务超过十秒没有完成任务
				ctx, _ := context.WithTimeout(context.Background(), m.timeout)
				go func() {
					select {
					case &lt;-ctx.Done():
						{
							m.mu.Lock()
							//再次判断如果任务没有完成则状态改为 dile
							if m.mapWork[i].status!=commited{
								fmt.Printf(&quot;超时了%v&quot;,i)
								m.mapWork[i].status=idle
							}
							m.mu.Unlock()
						}
					}
				}()
			}
			return nil
		}
		for i :=range m.mapWork {
			if m.mapWork[i].status == commited {
				continue
			}
			return nil
		}
		//接下来是reduce部分
		for i :=range m.reduceTable{
			if m.reduceTable[i].status==commited||m.reduceTable[i].status==isworking{
				continue
			}
			//当任务还没开始或任务超时时，分配任务
			if m.reduceTable[i].status==idle||m.reduceTable[i].status==0{
				m.reduceTable[i].status=isworking
				reply.Type=2
				reply.Id=i
				reply.Filename=&quot;mr-out-&quot;+strconv.Itoa(i)
				//设立超时，当前任务超过十秒没有完成任务
				ctx, _ := context.WithTimeout(context.Background(), m.timeout)
				go func() {
					select {
					case &lt;-ctx.Done():
						{
							m.mu.Lock()
							//再次判断如果任务没有完成则状态改为 dile
							if m.reduceTable[i].status!=commited{
								m.reduceTable[i].status=idle
							}
							m.mu.Unlock()
						}
					}
				}()
			}
			return nil
		}

	}
	if args.Status==&quot;commit&quot;{
		if args.Type==1{
			m.mapWork[args.Id].status=commited
		}else{
			m.reduceTable[args.Id].status=commited
		}

		bo := true
		for i:=range m.mapWork{
			if m.mapWork[i].status!=commited {
				bo=false
				break
			}
		}
		for i:=range m.reduceTable{
			if m.reduceTable[i].status!=commited {
				bo=false
				break
			}
		}
		m.allFinished=bo
		reply.AllFinished=bo
		return nil
	}
	return nil
}

//
// start a thread that listens for RPCs from worker.go
//
func (m *Master) server() {
	rpc.Register(m)
	rpc.HandleHTTP()
	//l, e := net.Listen(&quot;tcp&quot;, &quot;:1234&quot;)
	sockname := masterSock()
	os.Remove(sockname)
	l, e := net.Listen(&quot;unix&quot;, sockname)
	if e != nil {
		log.Fatal(&quot;listen error:&quot;, e)
	}
	go http.Serve(l, nil)
}

//
// main/mrmaster.go calls Done() periodically to find out
// if the entire job has finished.
//
func (m *Master) Done() bool {


	// Your code here.

	return m.allFinished
}

//
// create a Master.
// main/mrmaster.go calls this function.
// nReduce is the number of reduce tasks to use.
//
func MakeMaster(files []string, nReduce int) *Master {

	mapWork:=make([]WorkStatus,len(files))
	for i:=range files{
		mapWork[i]=WorkStatus{files[i],0,0}
	}
	reduceTable:=make([]WorkStatus,nReduce)
	for i:=0;i&lt;nReduce;i++{
		reduceTable[i]=WorkStatus{&quot;mr-out-&quot;+strconv.Itoa(i),0,0}
	}
	m := Master{
		timeout : 	10*time.Second,
		reduceN:	nReduce,
		mapN:		len(files),
		mapWork:	mapWork,
		reduceTable:reduceTable,
		allFinished:false,
	}


	// 得到所有原始slide 文件和要确定的reduce数量
	//分配worker：map去查读取这些文件

	m.server()
	return &amp;m
}

</code></pre>
<p>worker</p>
<pre><code class="language-go">package mr

import &quot;fmt&quot;
import &quot;log&quot;
import &quot;net/rpc&quot;
import &quot;hash/fnv&quot;
import &quot;io/ioutil&quot;
import &quot;encoding/json&quot;
import &quot;os&quot;
import &quot;strconv&quot;
import &quot;sort&quot;
//import &quot;time&quot;

//
// Map functions return a slice of KeyValue.
//
type KeyValue struct {
	Key   string
	Value string
}
type ByKey []KeyValue

// for sorting by key.
func (a ByKey) Len() int           { return len(a) }
func (a ByKey) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }
func (a ByKey) Less(i, j int) bool { return a[i].Key &lt; a[j].Key }

//
// use ihash(key) % NReduce to choose the reduce
// task number for each KeyValue emitted by Map.
//
func ihash(key string) int {
	h := fnv.New32a()
	h.Write([]byte(key))
	return int(h.Sum32() &amp; 0x7fffffff)
}

//
// main/mrworker.go calls this function.
//
func Worker(mapf func(string, string) []KeyValue,
	reducef func(string, []string) string) {
	//接收一个map函数和一个reduce函数
	//调用一个call的包装方法里面定义好arg和reply
	for{
		response:=CallExample()
		if response.AllFinished{
			break
		}
		if response.Type==1{
			MapImp(response,mapf)
			if CallFinish(response.Id,response.Type).AllFinished{
				return
			}
		}else if response.Type==2{
			ReduceImp(response,reducef)
			if CallFinish(response.Id,response.Type).AllFinished{
				return
			}
		}
		//time.Sleep(time.Second)

	}
}

func MapImp(response MyRPCReplay,mapf func(string, string) []KeyValue){
	//分配map
	//读取文件
	file, err := os.Open(response.Filename)
	if err != nil {
		log.Fatalf(&quot;cannot open %v&quot;, response.Filename)
	}
	content, err := ioutil.ReadAll(file)
	if err != nil {
		log.Fatalf(&quot;cannot read %v&quot;, response.Filename)
	}
	file.Close()
	kva := mapf(response.Filename, string(content))
	//分配kva 写到 rm-X-Y file 中
	reduceN:=response.ReduceN
	//初始化数组
	splitKey := make([][]KeyValue,reduceN)
	for i:=range splitKey{
		splitKey[i]=[]KeyValue{}
	}
	//把kva分配进每个splitKey[i]
	for _,kv:=range kva{
		y:=ihash(kv.Key)%response.ReduceN
		splitKey[y]=append(splitKey[y],kv)
	}
	for i:=range splitKey{
		if IsExist(&quot;mr-&quot;+strconv.Itoa(response.Id)+&quot;-&quot;+strconv.Itoa(i)){
			fmt.Println(&quot;mr-&quot;+strconv.Itoa(response.Id)+&quot;-&quot;+strconv.Itoa(i)+&quot;文件存在了呀&quot;)
		}
		Wfile, _ :=os.Create(&quot;mr-&quot;+strconv.Itoa(response.Id)+&quot;-&quot;+strconv.Itoa(i))
		enc := json.NewEncoder(Wfile)
		for _,kv := range splitKey[i]{
			err:=enc.Encode(kv)
			if err!=nil{
				break
			}
		}
		Wfile.Close()
	}
}

func ReduceImp(response MyRPCReplay,reducef func(string, []string) string){
	//创建filename

	id:=response.Id
	mapNum:=response.MapN
	kva := []KeyValue{}
	for i:=0;i&lt;mapNum;i++{
		filename:=&quot;mr-&quot;+strconv.Itoa(i)+&quot;-&quot;+strconv.Itoa(id)
		file,err:=os.Open(filename)
		if err!=nil{
			fmt.Println(err)
			break
		}
		dec := json.NewDecoder(file)
		for{
			var kv KeyValue
			if err := dec.Decode(&amp;kv);err!=nil{
				break
			}
			kva = append(kva,kv)
		}

	}

	sort.Sort(ByKey(kva))
	i := 0
	if IsExist(response.Filename){
		fmt.Println(&quot;文件存在了&quot;+response.Filename)
	}
	ofile, _ := os.Create(response.Filename)
	for i &lt; len(kva) {
		j := i + 1
		for j &lt; len(kva) &amp;&amp; kva[j].Key == kva[i].Key {
			j++
		}
		values := []string{}
		for k := i; k &lt; j; k++ {
			values = append(values, kva[k].Value)
		}

		output := reducef(kva[i].Key, values)

		fmt.Fprintf(ofile, &quot;%v %v\n&quot;, kva[i].Key, output)

		i = j
	}
	ofile.Close()
	//等待全部完成进行删除
	for i:=0;i&lt;mapNum;i++{
		filename:=&quot;mr-&quot;+strconv.Itoa(i)+&quot;-&quot;+strconv.Itoa(id)
		os.Remove(filename)
	}
}
//
// example function to show how to make an RPC call to the master.
//
// the RPC argument and reply types are defined in rpc.go.
//
func CallExample() MyRPCReplay{

	// declare an argument structure.
	args := MyRPCArgs{}

	// fill in the argument(s).
	args.Status = &quot;apply&quot;

	// declare a reply structure.
	reply := MyRPCReplay{}
	// send the RPC request, wait for the reply.
	if !call(&quot;Master.Handler&quot;, &amp;args, &amp;reply){
		//拨通 并且返回了 reply
		reply.Type=0
		return reply
	}
	//fmt.Println(reply)
	// reply.Y should be 100.
	//fmt.Printf(&quot;reply.Y %v %v\n&quot;, reply.allFinished,reply.Id)

	return reply
}
func CallFinish(id int,Type int)MyRPCReplay{
	// declare an argument structure.
	args := MyRPCArgs{}

	// fill in the argument(s).
	args.Status = &quot;commit&quot;
	args.Id=id
	args.Type=Type

	// declare a reply structure.
	reply := MyRPCReplay{}

	// send the RPC request, wait for the reply.
	if !call(&quot;Master.Handler&quot;, &amp;args, &amp;reply){
		//拨通 并且返回了 reply
		reply.Type=0
		return reply
	}



	// reply.Y should be 100.
	return reply
}
//
// send an RPC request to the master, wait for the response.
// usually returns true.
// returns false if something goes wrong.
//
func call(rpcname string, args interface{}, reply interface{}) bool {
	// c, err := rpc.DialHTTP(&quot;tcp&quot;, &quot;127.0.0.1&quot;+&quot;:1234&quot;)
	sockname := masterSock()
	c, err := rpc.DialHTTP(&quot;unix&quot;, sockname)
	if err != nil {
		log.Fatal(&quot;dialing:&quot;, err)
		return false
	}
	defer c.Close()
	//rpc调用master中的方法rpcname为要调用的方法名
	err = c.Call(rpcname, args, reply)
	if err == nil {
		return true
	}

	//fmt.Println(err)
	return false
}
func IsExist(path string) bool {
	_, err := os.Stat(path)
	return err == nil || os.IsExist(err)
	// 或者
	//return err == nil || !os.IsNotExist(err)
	// 或者
	//return !os.IsNotExist(err)
}
</code></pre>
<p>rpc</p>
<pre><code class="language-go">package mr

//
// RPC definitions.
//
// remember to capitalize all names.
//

import &quot;os&quot;
import &quot;strconv&quot;

//
// example to show how to declare the arguments
// and reply for an RPC.
//

// Add your RPC definitions here.
type MyRPCArgs struct {
	Status string// apply commit
	Type int// 1 map 2 reduce
	Id int

}
type MyRPCReplay struct {
	Type     int
	//Type 1为map
	//Type 2为reduce
	Filename string
	ReduceN int
	MapN int
	Id int
	AllFinished bool
}

// Cook up a unique-ish UNIX-domain socket name
// in /var/tmp, for the master.
// Can't use the current directory since
// Athena AFS doesn't support UNIX-domain sockets.
func masterSock() string {
	s := &quot;/var/tmp/824-mr-&quot;
	s += strconv.Itoa(os.Getuid())
	return s
}

</code></pre>
<p>毕竟第一次写 go 语言，感觉写出来的东西特别乱。</p>
<h2 id="收获">收获</h2>
<p>收获肯定是满满的，为了写 lab 学了 go 语言，了解到了这个 go 的协程和 python 的协程非常不同。再来就是等于这下初入门了分布式了，踏出第一步相信后面会越来越顺，毕竟万事开头难。最后就是花了大量的时间在看 sh 测试脚本，虽然没有系统的学，但下次看脚本也会不慌了。</p>
<p>然后下一步就是 lab2 。加油！</p>
', firstPicture='https://images.unsplash.com/photo-1475776882328-c5171955b060?ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80', flag='原创', views=2, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-06-11 22:36:49.0, updateTime=2020-06-11 22:37:00.0}
2020-06-11 22:37:13.669  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:13.669  INFO 16484 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-06-11 22:37:15.949  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:37:15.976  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:15.976  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:37:17.062  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/comments/74', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.CommentController.comments', args=[74, {}]}
2020-06-11 22:37:17.066  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:17.066  INFO 16484 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-06-11 22:37:36.982  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.AboutController.about', args=[]}
2020-06-11 22:37:36.986  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:36.986  INFO 16484 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn about
2020-06-11 22:37:37.807  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:37:37.819  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:37.820  INFO 16484 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-06-11 22:37:43.574  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-06-11 22:37:43.608  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:43.608  INFO 16484 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-06-11 22:37:45.091  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://localhost:8080/footer/newblog', ip='0:0:0:0:0:0:0:1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-06-11 22:37:45.102  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-06-11 22:37:45.102  INFO 16484 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList

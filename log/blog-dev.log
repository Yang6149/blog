2020-05-25 15:40:37.388  INFO 45096 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 45096 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 15:40:37.399 DEBUG 45096 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 15:40:37.401  INFO 45096 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 15:40:37.493  INFO 45096 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 15:40:37.494  INFO 45096 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 15:40:37.494  INFO 45096 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 15:40:38.997  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:40:38.999  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 15:40:39.069  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:40:39.071  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:40:39.074  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:40:39.076  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:40:39.078  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:40:39.079  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 15:40:39.086  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:40:39.087  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 15:40:39.101  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:40:39.103  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:40:39.103  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:40:39.104  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:40:39.105  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:40:39.105  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 15:40:39.115  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:40:39.115  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 15:40:39.212  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 89ms. Found 5 JPA repository interfaces.
2020-05-25 15:40:39.259  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:40:39.262  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 15:40:39.308  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:40:39.309  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:40:39.310  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:40:39.311  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:40:39.312  INFO 45096 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:40:39.314  INFO 45096 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-05-25 15:40:40.560  INFO 45096 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:40:43.211  INFO 45096 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 15:40:43.225  INFO 45096 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 15:40:43.226  INFO 45096 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 15:40:43.229  INFO 45096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 15:40:43.230  INFO 45096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 15:40:43.230  INFO 45096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 15:40:43.235  INFO 45096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 15:40:43.392  INFO 45096 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 15:40:43.392  INFO 45096 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5898 ms
2020-05-25 15:40:43.744  INFO 45096 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 15:40:43.854  INFO 45096 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 15:40:44.090  INFO 45096 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 15:40:44.231  INFO 45096 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 15:40:44.464  INFO 45096 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 15:40:44.487  INFO 45096 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 15:40:45.726  INFO 45096 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 15:40:45.734  INFO 45096 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 15:40:45.835  INFO 45096 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 15:40:47.269  WARN 45096 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 15:40:47.563  INFO 45096 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 15:40:47.745  INFO 45096 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 15:40:49.107  INFO 45096 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 15:40:49.111  INFO 45096 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 13.249 seconds (JVM running for 16.966)
2020-05-25 15:41:37.020  INFO 45096 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 15:41:37.021  INFO 45096 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 15:41:37.045  INFO 45096 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 24 ms
2020-05-25 15:41:37.102  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 15:41:37.279  INFO 45096 --- [http-nio-8080-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-05-25 15:41:37.281  INFO 45096 --- [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-05-25 15:41:40.643  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:41:40.653 ERROR 45096 --- [http-nio-8080-exec-1] c.y.b.h.ControllerExceptionHandler       : Request URL+http://127.0.0.1:8080/,Exception {}

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:942)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:353)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:132)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:95)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:82)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:215)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultListOperations.range(DefaultListOperations.java:171)
	at com.yang.blog.service.BlogServiceImpl.listBlog(BlogServiceImpl.java:57)
	at com.yang.blog.web.IndexController.index(IndexController.java:31)
	at com.yang.blog.web.IndexController$$FastClassBySpringCGLIB$$47ad99e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.yang.blog.web.IndexController$$EnhancerBySpringCGLIB$$3776892.index(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197)
	... 81 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:779)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:688)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-05-25 15:41:40.662  WARN 45096 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379]
2020-05-25 15:42:38.174  INFO 45096 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 15:42:38.803  INFO 45096 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:38.804  INFO 45096 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 15:42:39.925  INFO 45096 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:42:40.001  INFO 45096 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:40.002  INFO 45096 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:42:41.325  INFO 45096 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/64', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[64, {}]}
2020-05-25 15:42:41.555  INFO 45096 --- [http-nio-8080-exec-9] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=64, title='This is blog999', content='<p>9999</p>
', firstPicture='https://picsum.photos/id/1011/800/400', flag='原创', views=4, appreciation=true, shareStatement=false, commentabled=true, published=true, recommend=false, createTime=Mon May 25 15:42:41 CST 2020, updateTime=Mon May 25 15:42:41 CST 2020}
2020-05-25 15:42:41.555  INFO 45096 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:41.556  INFO 45096 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 15:42:42.304  INFO 45096 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:42:42.317  INFO 45096 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:42.317  INFO 45096 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:42:42.799  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/64', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[64, {}]}
2020-05-25 15:42:42.877  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:42.877  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 15:42:53.863  WARN 45096 --- [http-nio-8080-exec-6] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [552] milliseconds.
2020-05-25 15:42:54.140  INFO 45096 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:42:54.154  INFO 45096 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:54.154  INFO 45096 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:42:55.309  INFO 45096 --- [http-nio-8080-exec-6] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 15:42:55.664  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:42:55.673  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:55.674  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:42:56.589  INFO 45096 --- [http-nio-8080-exec-10] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 15:42:56.819  INFO 45096 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:42:56.832  INFO 45096 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:42:56.832  INFO 45096 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:48:12.384  INFO 45096 --- [http-nio-8080-exec-3] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 15:48:12.582  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:48:12.595  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:48:12.595  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:48:39.627  INFO 45096 --- [http-nio-8080-exec-1] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 15:48:40.003  INFO 45096 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:48:40.014  INFO 45096 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:48:40.014  INFO 45096 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:57:37.691  INFO 43740 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 43740 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 15:57:37.695 DEBUG 43740 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 15:57:37.695  INFO 43740 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 15:57:37.771  INFO 43740 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 15:57:37.772  INFO 43740 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 15:57:37.772  INFO 43740 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 15:57:39.214  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:57:39.216  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 15:57:39.287  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:57:39.290  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:57:39.292  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:57:39.295  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:57:39.298  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:57:39.299  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 15:57:39.307  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:57:39.308  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 15:57:39.324  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:57:39.325  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:57:39.327  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:57:39.327  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:57:39.329  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:57:39.329  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 15:57:39.346  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:57:39.347  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 15:57:39.454  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 100ms. Found 5 JPA repository interfaces.
2020-05-25 15:57:39.489  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:57:39.491  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 15:57:39.532  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:57:39.533  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:57:39.534  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:57:39.535  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:57:39.537  INFO 43740 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:57:39.539  INFO 43740 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-05-25 15:57:40.035  INFO 43740 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:57:40.702  INFO 43740 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 15:57:40.717  INFO 43740 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 15:57:40.718  INFO 43740 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 15:57:40.722  INFO 43740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 15:57:40.722  INFO 43740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 15:57:40.722  INFO 43740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 15:57:40.728  INFO 43740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 15:57:40.902  INFO 43740 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 15:57:40.902  INFO 43740 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3129 ms
2020-05-25 15:57:41.192  INFO 43740 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 15:57:41.318  INFO 43740 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 15:57:41.494  INFO 43740 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 15:57:41.607  INFO 43740 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 15:57:41.745  INFO 43740 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 15:57:41.768  INFO 43740 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 15:57:42.743  INFO 43740 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 15:57:42.750  INFO 43740 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 15:57:42.874  INFO 43740 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 15:57:44.873  WARN 43740 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 15:57:45.301  INFO 43740 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 15:57:45.436  INFO 43740 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 15:57:46.662  INFO 43740 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 15:57:46.666  INFO 43740 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 10.194 seconds (JVM running for 12.168)
2020-05-25 15:58:06.912  INFO 32260 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 32260 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 15:58:06.921 DEBUG 32260 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 15:58:06.922  INFO 32260 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 15:58:07.069  INFO 32260 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 15:58:07.071  INFO 32260 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 15:58:07.071  INFO 32260 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 15:58:08.199  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:58:08.201  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 15:58:08.255  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:58:08.257  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:58:08.258  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:58:08.261  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:58:08.262  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 15:58:08.263  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 57ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 15:58:08.268  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:58:08.269  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 15:58:08.282  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:58:08.282  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:58:08.283  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:58:08.283  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:58:08.284  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 15:58:08.284  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 15:58:08.294  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:58:08.294  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 15:58:08.354  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 56ms. Found 5 JPA repository interfaces.
2020-05-25 15:58:08.374  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 15:58:08.375  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 15:58:08.397  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:58:08.398  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:58:08.398  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:58:08.399  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:58:08.400  INFO 32260 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 15:58:08.401  INFO 32260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2020-05-25 15:58:08.771  INFO 32260 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:58:09.322  INFO 32260 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 15:58:09.332  INFO 32260 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 15:58:09.333  INFO 32260 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 15:58:09.336  INFO 32260 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 15:58:09.337  INFO 32260 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 15:58:09.337  INFO 32260 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 15:58:09.341  INFO 32260 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 15:58:09.481  INFO 32260 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 15:58:09.481  INFO 32260 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2410 ms
2020-05-25 15:58:09.705  INFO 32260 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 15:58:09.764  INFO 32260 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 15:58:09.897  INFO 32260 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 15:58:09.988  INFO 32260 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 15:58:10.113  INFO 32260 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 15:58:10.128  INFO 32260 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 15:58:11.008  INFO 32260 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 15:58:11.015  INFO 32260 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 15:58:11.105  INFO 32260 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 15:58:12.157  WARN 32260 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 15:58:12.404  INFO 32260 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 15:58:12.512  INFO 32260 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 15:58:13.577  INFO 32260 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 15:58:13.580  INFO 32260 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 7.829 seconds (JVM running for 9.626)
2020-05-25 15:59:13.970  INFO 32260 --- [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 15:59:13.971  INFO 32260 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 15:59:13.998  INFO 32260 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 26 ms
2020-05-25 15:59:14.072  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 15:59:14.477  INFO 32260 --- [http-nio-8080-exec-3] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-05-25 15:59:14.485  INFO 32260 --- [http-nio-8080-exec-3] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-05-25 15:59:16.841  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:16.842  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 15:59:17.209  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 15:59:17.288  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:17.289  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 15:59:17.389  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 15:59:17.437  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:17.437  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 15:59:18.499  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:18.553  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:18.554  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:19.812  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/64', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[64, {}]}
2020-05-25 15:59:19.992  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=64, title='This is blog999', content='<p>9999</p>
', firstPicture='https://picsum.photos/id/1011/800/400', flag='原创', views=5, appreciation=true, shareStatement=false, commentabled=true, published=true, recommend=false, createTime=2020-05-25 15:42:41.0, updateTime=2020-05-25 15:42:41.0}
2020-05-25 15:59:19.994  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:19.994  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 15:59:20.635  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:20.647  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:20.647  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:20.967  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/64', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[64, {}]}
2020-05-25 15:59:21.022  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:21.023  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 15:59:24.231  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 15:59:24.284  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:24.285  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 15:59:25.129  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:25.140  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:25.140  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:29.074  WARN 32260 --- [http-nio-8080-exec-5] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [538] milliseconds.
2020-05-25 15:59:29.326  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:29.339  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:29.339  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:30.457  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 15:59:30.732  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:30.741  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:30.742  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:33.543  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 15:59:33.741  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:33.752  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:33.753  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:40.752  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-05-25 15:59:40.848  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 15:59:41.240  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:41.250  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:41.251  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:43.951  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 15:59:44.171  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:44.180  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:44.181  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:46.923  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 15:59:47.177  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:47.186  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:47.187  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:50.793  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 15:59:50.824  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:50.825  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 15:59:51.787  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:51.798  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:51.799  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:52.290  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/64', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[64, {}]}
2020-05-25 15:59:52.317  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=64, title='This is blog999', content='<p>9999</p>
', firstPicture='https://picsum.photos/id/1011/800/400', flag='原创', views=6, appreciation=true, shareStatement=false, commentabled=true, published=true, recommend=false, createTime=2020-05-25 15:42:41.0, updateTime=2020-05-25 15:59:41.0}
2020-05-25 15:59:52.318  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:52.318  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 15:59:53.690  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:53.700  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:53.700  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:54.020  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/64', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[64, {}]}
2020-05-25 15:59:54.023  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:54.023  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 15:59:58.088  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/63', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[63, {}]}
2020-05-25 15:59:58.110  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=63, title='This is blog8888', content='<p>8888</p>
', firstPicture='https://picsum.photos/id/1011/800/400', flag='', views=2, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=false, createTime=2020-02-17 21:47:11.0, updateTime=2020-02-17 21:47:11.0}
2020-05-25 15:59:58.111  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:58.111  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 15:59:58.740  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 15:59:58.753  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:58.753  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 15:59:59.169  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/63', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[63, {}]}
2020-05-25 15:59:59.172  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 15:59:59.172  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:00:26.832  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:00:26.887  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:26.888  INFO 32260 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:00:28.457  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:28.467  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:28.467  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:00:31.499  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:31.509  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:31.509  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:00:32.566  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:00:32.836  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:32.847  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:32.848  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:00:33.744  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 16:00:34.057  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:34.068  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:34.069  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:00:48.668  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-05-25 16:00:48.710  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:00:49.046  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:49.054  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:49.055  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:00:51.747  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:00:51.773  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:51.773  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:00:53.052  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:53.062  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:53.063  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:00:53.505  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/64', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[64, {}]}
2020-05-25 16:00:53.529  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=64, title='This is blog999', content='<h2 id="32">32</h2>
', firstPicture='https://picsum.photos/id/1011/800/400', flag='原创', views=7, appreciation=true, shareStatement=false, commentabled=true, published=true, recommend=false, createTime=2020-05-25 15:42:41.0, updateTime=2020-05-25 16:00:49.0}
2020-05-25 16:00:53.529  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:53.529  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:00:54.752  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:54.761  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:54.761  INFO 32260 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:00:55.181  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/64', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[64, {}]}
2020-05-25 16:00:55.183  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:55.184  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:00:58.983  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:00:59.030  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:59.031  INFO 32260 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:00:59.849  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:00:59.859  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:00:59.859  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:01:03.644  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:01:03.652  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:03.652  INFO 32260 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:01:04.749  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:01:05.060  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:01:05.069  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:05.069  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:01:06.070  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 16:01:06.288  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:01:06.297  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:06.297  INFO 32260 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:01:33.603  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-05-25 16:01:33.647  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:01:33.951  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:01:33.959  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:33.960  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:01:40.881  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:01:40.899  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:40.899  INFO 32260 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:01:41.867  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:01:41.875  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:41.875  INFO 32260 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:01:44.352  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/64', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[64, {}]}
2020-05-25 16:01:44.372  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=64, title='This is blog999', content='<h3 id="32">32</h3>
', firstPicture='https://picsum.photos/id/1011/800/400', flag='原创', views=8, appreciation=true, shareStatement=false, commentabled=true, published=true, recommend=false, createTime=2020-05-25 15:42:41.0, updateTime=2020-05-25 16:01:34.0}
2020-05-25 16:01:44.374  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:44.374  INFO 32260 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:01:45.150  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:01:45.159  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:45.159  INFO 32260 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:01:45.521  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/64', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[64, {}]}
2020-05-25 16:01:45.522  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:01:45.523  INFO 32260 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:02:31.363  INFO 42472 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 42472 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:02:31.368 DEBUG 42472 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:02:31.368  INFO 42472 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:02:31.501  INFO 42472 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:02:31.502  INFO 42472 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:02:31.502  INFO 42472 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:02:32.787  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:02:32.789  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:02:32.849  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:02:32.850  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:02:32.852  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:02:32.854  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:02:32.855  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:02:32.857  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 63ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:02:32.863  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:02:32.864  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:02:32.877  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:02:32.878  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:02:32.880  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:02:32.881  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:02:32.882  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:02:32.882  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:02:32.893  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:02:32.894  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:02:32.987  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 88ms. Found 5 JPA repository interfaces.
2020-05-25 16:02:33.017  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:02:33.019  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:02:33.070  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:02:33.071  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:02:33.072  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:02:33.073  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:02:33.073  INFO 42472 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:02:33.074  INFO 42472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2020-05-25 16:02:33.519  INFO 42472 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:02:34.234  INFO 42472 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:02:34.245  INFO 42472 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:02:34.245  INFO 42472 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:02:34.250  INFO 42472 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:02:34.250  INFO 42472 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:02:34.251  INFO 42472 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:02:34.254  INFO 42472 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:02:34.432  INFO 42472 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:02:34.432  INFO 42472 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2930 ms
2020-05-25 16:02:34.666  INFO 42472 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:02:34.744  INFO 42472 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:02:34.894  INFO 42472 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:02:34.999  INFO 42472 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:02:35.164  INFO 42472 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:02:35.179  INFO 42472 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:02:36.220  INFO 42472 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:02:36.227  INFO 42472 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:02:36.326  INFO 42472 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:02:37.623  WARN 42472 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:02:37.927  INFO 42472 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:02:38.072  INFO 42472 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:02:39.280  INFO 42472 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:02:39.286  INFO 42472 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 9.406 seconds (JVM running for 11.4)
2020-05-25 16:03:08.037  INFO 42472 --- [http-nio-8080-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:03:08.038  INFO 42472 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:03:08.060  INFO 42472 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 22 ms
2020-05-25 16:03:08.123  INFO 42472 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:03:08.293  INFO 42472 --- [http-nio-8080-exec-5] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-05-25 16:03:08.297  INFO 42472 --- [http-nio-8080-exec-5] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-05-25 16:03:10.164  INFO 42472 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:10.165  INFO 42472 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:03:11.872  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:11.946  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:11.947  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:15.687  WARN 42472 --- [http-nio-8080-exec-5] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [547] milliseconds.
2020-05-25 16:03:16.003  INFO 42472 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:16.019  INFO 42472 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:16.020  INFO 42472 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:17.127  INFO 42472 --- [http-nio-8080-exec-5] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:03:17.423  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:17.436  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:17.437  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:18.374  INFO 42472 --- [http-nio-8080-exec-10] com.yang.blog.web.admin.BlogController   : 修改blog
2020-05-25 16:03:18.593  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:18.607  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:18.607  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:24.877  INFO 42472 --- [http-nio-8080-exec-10] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-05-25 16:03:24.958  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:03:25.311  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:25.326  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:25.326  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:26.559  INFO 42472 --- [http-nio-8080-exec-1] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:03:26.839  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:26.849  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:26.849  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:35.103  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:03:35.138  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:35.138  INFO 42472 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:03:36.346  INFO 42472 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:36.357  INFO 42472 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:36.358  INFO 42472 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:37.870  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/64', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[64, {}]}
2020-05-25 16:03:37.961  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=64, title='This is blog999', content='<h3 id="32">32</h3>
', firstPicture='https://picsum.photos/id/1011/800/400', flag='原创', views=9, appreciation=true, shareStatement=false, commentabled=true, published=true, recommend=false, createTime=2020-05-25 15:42:41.0, updateTime=2020-05-25 16:03:25.0}
2020-05-25 16:03:37.961  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:37.961  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:03:38.642  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:03:38.651  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:38.651  INFO 42472 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:03:38.964  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/64', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[64, {}]}
2020-05-25 16:03:39.004  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:03:39.005  INFO 42472 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:19:21.021  INFO 44736 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 44736 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:19:21.025 DEBUG 44736 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:19:21.025  INFO 44736 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:19:21.154  INFO 44736 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:19:21.155  INFO 44736 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:19:21.155  INFO 44736 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:19:22.345  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:19:22.347  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:19:22.406  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:19:22.408  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:19:22.410  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:19:22.412  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:19:22.414  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:19:22.414  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 63ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:19:22.421  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:19:22.422  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:19:22.434  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:19:22.434  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:19:22.435  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:19:22.437  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:19:22.438  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:19:22.438  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:19:22.449  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:19:22.449  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:19:22.516  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 61ms. Found 5 JPA repository interfaces.
2020-05-25 16:19:22.541  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:19:22.542  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:19:22.566  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:19:22.567  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:19:22.569  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:19:22.571  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:19:22.572  INFO 44736 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:19:22.573  INFO 44736 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces.
2020-05-25 16:19:22.982  INFO 44736 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:19:23.571  INFO 44736 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:19:23.581  INFO 44736 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:19:23.582  INFO 44736 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:19:23.585  INFO 44736 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:19:23.585  INFO 44736 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:19:23.585  INFO 44736 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:19:23.590  INFO 44736 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:19:23.745  INFO 44736 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:19:23.746  INFO 44736 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2591 ms
2020-05-25 16:19:23.981  INFO 44736 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:19:24.048  INFO 44736 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:19:24.185  INFO 44736 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:19:24.289  INFO 44736 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:19:24.413  INFO 44736 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:19:24.429  INFO 44736 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:19:25.330  INFO 44736 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:19:25.339  INFO 44736 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:19:25.418  INFO 44736 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:19:26.549  WARN 44736 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:19:26.817  INFO 44736 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:19:26.945  INFO 44736 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:19:27.999  INFO 44736 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:19:28.002  INFO 44736 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 8.363 seconds (JVM running for 10.23)
2020-05-25 16:19:44.616  INFO 44736 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:19:44.617  INFO 44736 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:19:44.634  INFO 44736 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-05-25 16:19:44.675  INFO 44736 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:19:44.847  INFO 44736 --- [http-nio-8080-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-05-25 16:19:44.849  INFO 44736 --- [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-05-25 16:19:46.396  INFO 44736 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:19:46.397  INFO 44736 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:19:47.983  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:19:48.033  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:19:48.034  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:19:52.069  WARN 44736 --- [http-nio-8080-exec-8] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [517] milliseconds.
2020-05-25 16:19:52.324  INFO 44736 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:19:52.338  INFO 44736 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:19:52.338  INFO 44736 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:19:53.322  INFO 44736 --- [http-nio-8080-exec-8] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:19:53.598  INFO 44736 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:19:53.610  INFO 44736 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:19:53.611  INFO 44736 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:19:55.731  INFO 44736 --- [http-nio-8080-exec-1] com.yang.blog.web.admin.BlogController   : 增加blog
2020-05-25 16:19:55.933  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:19:55.946  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:19:55.946  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:20:50.474  INFO 44736 --- [http-nio-8080-exec-5] com.yang.blog.web.admin.BlogController   : 提交增加blog
2020-05-25 16:20:50.560  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.web.admin.BlogController   : 访问list
2020-05-25 16:20:50.986  INFO 44736 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:20:50.998  INFO 44736 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:20:50.999  INFO 44736 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:20:54.008  INFO 44736 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:20:54.041  INFO 44736 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:20:54.042  INFO 44736 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:20:54.806  INFO 44736 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:20:54.819  INFO 44736 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:20:54.819  INFO 44736 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:20:55.530  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:20:55.555  INFO 44736 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:20:55.560 ERROR 44736 --- [http-nio-8080-exec-4] c.y.b.h.ControllerExceptionHandler       : Request URL+http://127.0.0.1:8080/blog/65,Exception {}

java.lang.NullPointerException: null
	at com.yang.blog.service.BlogServiceImpl.getAndConvert(BlogServiceImpl.java:45)
	at com.yang.blog.web.IndexController.blog(IndexController.java:40)
	at com.yang.blog.web.IndexController$$FastClassBySpringCGLIB$$47ad99e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.yang.blog.web.IndexController$$EnhancerBySpringCGLIB$$ed54eca.blog(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-05-25 16:20:55.563  WARN 44736 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-05-25 16:21:43.226  INFO 40876 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 40876 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:21:43.231 DEBUG 40876 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:21:43.232  INFO 40876 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:21:43.374  INFO 40876 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:21:43.375  INFO 40876 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:21:43.376  INFO 40876 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:21:45.215  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:21:45.216  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:21:45.312  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:21:45.315  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:21:45.317  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:21:45.319  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:21:45.322  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:21:45.323  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:21:45.335  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:21:45.337  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:21:45.356  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:21:45.359  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:21:45.360  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:21:45.361  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:21:45.362  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:21:45.362  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:21:45.375  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:21:45.376  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:21:45.494  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107ms. Found 5 JPA repository interfaces.
2020-05-25 16:21:45.527  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:21:45.528  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:21:45.573  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:21:45.573  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:21:45.574  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:21:45.575  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:21:45.576  INFO 40876 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:21:45.577  INFO 40876 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2020-05-25 16:21:46.367  INFO 40876 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:21:47.320  INFO 40876 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:21:47.339  INFO 40876 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:21:47.341  INFO 40876 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:21:47.346  INFO 40876 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:21:47.347  INFO 40876 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:21:47.348  INFO 40876 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:21:47.354  INFO 40876 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:21:47.609  INFO 40876 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:21:47.610  INFO 40876 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4231 ms
2020-05-25 16:21:48.131  INFO 40876 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:21:48.266  INFO 40876 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:21:48.505  INFO 40876 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:21:48.663  INFO 40876 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:21:48.874  INFO 40876 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:21:48.905  INFO 40876 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:21:50.617  INFO 40876 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:21:50.633  INFO 40876 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:21:50.779  INFO 40876 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:21:53.014  WARN 40876 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:21:53.564  INFO 40876 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:21:53.733  INFO 40876 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:21:55.162  INFO 40876 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:21:55.166  INFO 40876 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 13.931 seconds (JVM running for 16.188)
2020-05-25 16:23:11.136  INFO 40876 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:23:11.137  INFO 40876 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:23:11.164  INFO 40876 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 27 ms
2020-05-25 16:23:11.205  INFO 40876 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.index', args=[Page request [number: 0, size 10, sort: id: DESC], {}]}
2020-05-25 16:23:11.369  INFO 40876 --- [http-nio-8080-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-05-25 16:23:11.371  INFO 40876 --- [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-05-25 16:23:13.444  INFO 40876 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:23:13.445  INFO 40876 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn index
2020-05-25 16:23:15.018  INFO 40876 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:23:15.088  INFO 40876 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:23:15.088  INFO 40876 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:23:24.187  INFO 40876 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:23:24.299  INFO 40876 --- [http-nio-8080-exec-3] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=65, title='呢哇', content='<h1 id="query">Query</h1>
<h2 id="1-query-plan">1. Query Plan</h2>
<p>我们在接收到一段SQL后需要对语句进行解释，变成让计算机可以理解的格式。这个格式就是 query plan，是由不同的操作组成的Tree结构。</p>
<p>根节点是我们要返回的数据，中间节点是数据的处理过程，子节点是读取数据的过程。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211127-656099.png" alt="1590325886471" /></p>
<h2 id="2-processing-models">2. Processing Models</h2>
<p>在有了Query Plan 后就知道需要进行什么操作了。现在考虑怎么执行，执行的顺序和方式。</p>
<h3 id="1-iterator-model">1. Iterator Model</h3>
<p>每一个节点都是一个 Iterator，不断的调用next，next的结果就是它的子树的内容。调用完后进行emit返回给自己父级。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211512-974350.png" alt="1590326111591" /></p>
<p>通过自顶向下的调用来完成查询。毕竟数据可能大过缓冲池，多次进行IO读取速度太慢，而且生产太多中间数据不太好。会用到pipeline的方式，尽量减少中间数据产生，当然在进行join，subQuery、order 等操作时，会发生 pipeline break。</p>
<h3 id="2-materialization-model">2. Materialization Model</h3>
<p>这种方法是Iterate 的过程中，直接获取全部的子数据，再进行计算。这种方式比较适合 OLTP ，因为这种操作一般获取少量的 tuple，获取完数据再处理更加方便。不使用于 OLAP ，因为海量数据读不完，可能需要其他的分盘、分数据等操作。</p>
<h3 id="3-vectorization-model">3. Vectorization Model</h3>
<p>我们知道数据是存储再一个个的 Page 当中的，所以我们读数据也应该是按Page为单位。所以我们在 Iterator Model 的基础上进行进行一些优化，每次自上而下的调用不是读一个tuple就返回，而是读完整个Block才返回。</p>
<h2 id="3-access-methods">3. Access Methods</h2>
<p>现在让我们讨论读取表中数据的方法。</p>
<h3 id="31-顺序扫描">3.1 顺序扫描</h3>
<p>就硬扫描，横向遍历读取Table中每个Page的数据。但我们可以做一些优化</p>
<ol>
<li>预读取</li>
<li>并行读取</li>
<li>读完数据不写回缓冲池，因为我们只扫描一遍就过了</li>
<li>Zone Map：通过在Block上写一些每个重要属性的范围来判断是否要读</li>
</ol>
<h3 id="32-index-scan">3.2 Index Scan</h3>
<p>顾名思义根据索引来读取数据，不多说。</p>
<h3 id="33-multi-index-scan">3.3 Multi-Index Scan</h3>
<p>可以通过对每个索引进行扫描读取到一个Set中，然后在对它们进行去重。期间可以运用 bitmap、bloom filter 的数据结构进行去重和减少无效读取</p>
<h1 id="parallel-query">Parallel Query</h1>
<h2 id="1-parallel-database-和-distribute-database">1. Parallel database 和 distribute database</h2>
<p><strong>parallel database</strong> wiki：Parallel databases improve processing and <a href="https://en.wikipedia.org/wiki/Input/output" target="_blank">input/output</a> speeds by using multiple <a href="https://en.wikipedia.org/wiki/CPU" target="_blank">CPUs</a> and disks in parallel.</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152736-306482.png" alt="1590391623644" /></p>
<p>可以知道并行数据库就是同时使用多个CPU core 和多个 磁盘进行读写来横向扩展速度。</p>
<p>根据不同数据库可以分为两种水平分区和垂直分区</p>
<p>下图是根据列划分</p>
<p><img src="C:\Users\hasaki\AppData\Roaming\Typora\typora-user-images\1590391753315.png" alt="1590391753315" /></p>
<p>误区：SSD多通道主控多个闪存可以同时读写同一个文件，并且突破了机械硬盘的物理移动地址限制，所以更快，和上面不是同一概念。</p>
<p>**Distributed DBMS:**数据本身存储在多个地区，详细可以看之前写的mit6.824中的一些实现部分。</p>
<h2 id="2-并行类型">2. 并行类型</h2>
<ol>
<li>单个查询的并行操作</li>
</ol>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151409-594975.png" alt="1590390849433" /></p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152519-603670.png" alt="1590391517437" /></p>
<ol start="2">
<li>
<p>并行多个查询操作</p>
<p>利用多核优势同时进行多个 查询 操作。</p>
</li>
</ol>
<h2 id="3-process-model">3. Process Model</h2>
<h3 id="31-process-per-worker">3.1 Process per worker</h3>
<p>这种方式依靠 OS 的调度，共享相同的数据结构，在一个进程 crash 掉后不会影响其他的进程，IBM的DB2和Oracle 以及 postgreSQL使用这种</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151940-963868.png" alt="1590391180715" /></p>
<h3 id="32-process-pool">3.2 Process Pool</h3>
<p>每当想使用一个进程时都会去进程池中调用一个进程，也是上几家公司在用</p>
<h3 id="33-thread-per-worker">3.3 Thread per worker</h3>
<p>在单进程中创建一个线程池，想要调度时就去线程池中取，MySQL、SQLServer以及Oracle都在用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152331-402586.png" alt="1590391411472" /></p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=null, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-05-25 16:20:50.0, updateTime=2020-05-25 16:20:50.0}
2020-05-25 16:23:24.300  INFO 40876 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:23:24.301  INFO 40876 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:23:24.991  INFO 40876 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:23:25.004  INFO 40876 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:23:25.004  INFO 40876 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:23:25.355  INFO 40876 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/65', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[65, {}]}
2020-05-25 16:23:25.398  INFO 40876 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:23:25.398  INFO 40876 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:23:52.983  INFO 45084 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 45084 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:23:53.029 DEBUG 45084 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:23:53.030  INFO 45084 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:23:53.112  INFO 45084 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:23:53.113  INFO 45084 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:23:53.113  INFO 45084 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:23:54.280  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:23:54.282  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:23:54.338  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:23:54.340  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:23:54.344  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:23:54.346  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:23:54.348  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:23:54.349  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 62ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:23:54.354  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:23:54.354  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:23:54.369  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:23:54.369  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:23:54.370  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:23:54.370  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:23:54.371  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:23:54.371  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:23:54.383  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:23:54.383  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:23:54.450  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 63ms. Found 5 JPA repository interfaces.
2020-05-25 16:23:54.468  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:23:54.469  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:23:54.491  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:23:54.494  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:23:54.494  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:23:54.495  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:23:54.496  INFO 45084 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:23:54.497  INFO 45084 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2020-05-25 16:23:54.922  INFO 45084 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:23:55.533  INFO 45084 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:23:55.548  INFO 45084 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:23:55.549  INFO 45084 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:23:55.552  INFO 45084 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:23:55.553  INFO 45084 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:23:55.553  INFO 45084 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:23:55.557  INFO 45084 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:23:55.723  INFO 45084 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:23:55.723  INFO 45084 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2610 ms
2020-05-25 16:23:55.961  INFO 45084 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:23:56.030  INFO 45084 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:23:56.163  INFO 45084 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:23:56.260  INFO 45084 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:23:56.387  INFO 45084 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:23:56.403  INFO 45084 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:23:57.330  INFO 45084 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:23:57.336  INFO 45084 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:23:57.414  INFO 45084 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:23:58.719  WARN 45084 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:23:59.021  INFO 45084 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:23:59.160  INFO 45084 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:24:00.219  INFO 45084 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:24:00.222  INFO 45084 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 8.608 seconds (JVM running for 10.625)
2020-05-25 16:25:39.608  INFO 45084 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:25:39.610  INFO 45084 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:25:39.631  INFO 45084 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 21 ms
2020-05-25 16:25:39.687  INFO 45084 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:25:39.770  INFO 45084 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:25:39.775 ERROR 45084 --- [http-nio-8080-exec-10] c.y.b.h.ControllerExceptionHandler       : Request URL+http://127.0.0.1:8080/blog/65,Exception {}

java.lang.NullPointerException: null
	at com.yang.blog.service.BlogServiceImpl.getAndConvert(BlogServiceImpl.java:45)
	at com.yang.blog.web.IndexController.blog(IndexController.java:40)
	at com.yang.blog.web.IndexController$$FastClassBySpringCGLIB$$47ad99e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.yang.blog.web.IndexController$$EnhancerBySpringCGLIB$$e8e37f06.blog(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-05-25 16:25:39.779  WARN 45084 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-05-25 16:26:21.404  INFO 40956 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 40956 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:26:21.410 DEBUG 40956 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:26:21.410  INFO 40956 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:26:21.521  INFO 40956 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:26:21.522  INFO 40956 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:26:21.522  INFO 40956 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:26:22.602  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:26:22.604  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:26:22.663  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:26:22.665  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:26:22.667  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:26:22.669  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:26:22.671  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:26:22.672  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 63ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:26:22.678  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:26:22.679  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:26:22.691  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:26:22.692  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:26:22.694  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:26:22.695  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:26:22.696  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:26:22.696  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:26:22.707  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:26:22.707  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:26:22.772  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 60ms. Found 5 JPA repository interfaces.
2020-05-25 16:26:22.797  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:26:22.798  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:26:22.821  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:26:22.822  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:26:22.823  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:26:22.823  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:26:22.824  INFO 40956 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:26:22.824  INFO 40956 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2020-05-25 16:26:23.249  INFO 40956 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:26:23.831  INFO 40956 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:26:23.848  INFO 40956 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:26:23.848  INFO 40956 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:26:23.851  INFO 40956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:26:23.851  INFO 40956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:26:23.852  INFO 40956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:26:23.855  INFO 40956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:26:24.020  INFO 40956 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:26:24.021  INFO 40956 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2499 ms
2020-05-25 16:26:24.257  INFO 40956 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:26:24.325  INFO 40956 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:26:24.453  INFO 40956 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:26:24.550  INFO 40956 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:26:24.675  INFO 40956 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:26:24.692  INFO 40956 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:26:25.602  INFO 40956 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:26:25.609  INFO 40956 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:26:25.684  INFO 40956 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:26:26.821  WARN 40956 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:26:27.098  INFO 40956 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:26:27.223  INFO 40956 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:26:28.249  INFO 40956 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:26:28.253  INFO 40956 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 8.326 seconds (JVM running for 10.417)
2020-05-25 16:26:56.660  INFO 40956 --- [http-nio-8080-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:26:56.662  INFO 40956 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:26:56.681  INFO 40956 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 19 ms
2020-05-25 16:26:56.730  INFO 40956 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:26:56.819  INFO 40956 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:26:56.822 ERROR 40956 --- [http-nio-8080-exec-5] c.y.b.h.ControllerExceptionHandler       : Request URL+http://127.0.0.1:8080/blog/65,Exception {}

java.lang.NullPointerException: null
	at com.yang.blog.service.BlogServiceImpl.getAndConvert(BlogServiceImpl.java:46)
	at com.yang.blog.web.IndexController.blog(IndexController.java:40)
	at com.yang.blog.web.IndexController$$FastClassBySpringCGLIB$$47ad99e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.yang.blog.web.IndexController$$EnhancerBySpringCGLIB$$9a64dda9.blog(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-05-25 16:26:56.827  WARN 40956 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-05-25 16:28:23.058  INFO 34008 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 34008 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:28:23.062 DEBUG 34008 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:28:23.062  INFO 34008 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:28:23.161  INFO 34008 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:28:23.162  INFO 34008 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:28:23.162  INFO 34008 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:28:24.299  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:28:24.301  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:28:24.389  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:28:24.392  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:28:24.395  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:28:24.399  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:28:24.402  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:28:24.403  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:28:24.410  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:28:24.411  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:28:24.431  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:28:24.432  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:28:24.433  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:28:24.434  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:28:24.434  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:28:24.434  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:28:24.445  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:28:24.445  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:28:24.519  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 68ms. Found 5 JPA repository interfaces.
2020-05-25 16:28:24.551  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:28:24.557  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:28:24.593  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:28:24.593  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:28:24.594  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:28:24.595  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:28:24.596  INFO 34008 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:28:24.597  INFO 34008 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-05-25 16:28:25.082  INFO 34008 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:28:25.800  INFO 34008 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:28:25.814  INFO 34008 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:28:25.815  INFO 34008 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:28:25.820  INFO 34008 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:28:25.821  INFO 34008 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:28:25.821  INFO 34008 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:28:25.825  INFO 34008 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:28:26.001  INFO 34008 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:28:26.001  INFO 34008 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2838 ms
2020-05-25 16:28:26.260  INFO 34008 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:28:26.325  INFO 34008 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:28:26.490  INFO 34008 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:28:26.621  INFO 34008 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:28:26.759  INFO 34008 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:28:26.778  INFO 34008 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:28:27.760  INFO 34008 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:28:27.771  INFO 34008 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:28:27.875  INFO 34008 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:28:29.091  WARN 34008 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:28:29.419  INFO 34008 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:28:29.565  INFO 34008 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:28:30.614  INFO 34008 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:28:30.618  INFO 34008 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 8.998 seconds (JVM running for 11.017)
2020-05-25 16:29:15.032  INFO 34008 --- [http-nio-8080-exec-7] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:29:15.034  INFO 34008 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:29:15.050  INFO 34008 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-05-25 16:29:15.099  INFO 34008 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:29:15.189  INFO 34008 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:29:15.192 ERROR 34008 --- [http-nio-8080-exec-7] c.y.b.h.ControllerExceptionHandler       : Request URL+http://127.0.0.1:8080/blog/65,Exception {}

java.lang.NullPointerException: null
	at com.yang.blog.service.BlogServiceImpl.getAndConvert(BlogServiceImpl.java:47)
	at com.yang.blog.web.IndexController.blog(IndexController.java:40)
	at com.yang.blog.web.IndexController$$FastClassBySpringCGLIB$$47ad99e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.yang.blog.web.IndexController$$EnhancerBySpringCGLIB$$828c65c0.blog(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-05-25 16:29:15.196  WARN 34008 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-05-25 16:30:21.624  INFO 12020 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 12020 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:30:21.629 DEBUG 12020 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:30:21.629  INFO 12020 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:30:21.723  INFO 12020 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:30:21.725  INFO 12020 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:30:21.725  INFO 12020 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:30:22.866  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:30:22.868  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:30:22.925  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:30:22.927  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:30:22.928  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:30:22.930  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:30:22.932  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:30:22.933  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 60ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:30:22.941  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:30:22.942  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:30:22.955  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:30:22.956  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:30:22.957  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:30:22.957  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:30:22.958  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:30:22.958  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:30:22.971  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:30:22.972  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:30:23.047  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 70ms. Found 5 JPA repository interfaces.
2020-05-25 16:30:23.065  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:30:23.067  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:30:23.092  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:30:23.094  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:30:23.094  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:30:23.095  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:30:23.096  INFO 12020 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:30:23.096  INFO 12020 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2020-05-25 16:30:23.513  INFO 12020 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:30:24.150  INFO 12020 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:30:24.162  INFO 12020 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:30:24.162  INFO 12020 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:30:24.165  INFO 12020 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:30:24.165  INFO 12020 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:30:24.165  INFO 12020 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:30:24.170  INFO 12020 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:30:24.325  INFO 12020 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:30:24.325  INFO 12020 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2600 ms
2020-05-25 16:30:24.573  INFO 12020 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:30:24.648  INFO 12020 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:30:24.776  INFO 12020 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:30:24.874  INFO 12020 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:30:24.997  INFO 12020 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:30:25.013  INFO 12020 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:30:25.955  INFO 12020 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:30:25.962  INFO 12020 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:30:26.068  INFO 12020 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:30:27.319  WARN 12020 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:30:27.577  INFO 12020 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:30:27.706  INFO 12020 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:30:28.756  INFO 12020 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:30:28.759  INFO 12020 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 8.57 seconds (JVM running for 10.533)
2020-05-25 16:30:32.085  INFO 12020 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:30:32.086  INFO 12020 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:30:32.104  INFO 12020 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-05-25 16:30:32.151  INFO 12020 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:30:32.414  INFO 12020 --- [http-nio-8080-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-05-25 16:30:32.416  INFO 12020 --- [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-05-25 16:30:33.766  INFO 12020 --- [http-nio-8080-exec-1] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=65, title='呢哇', content='<h1 id="query">Query</h1>
<h2 id="1-query-plan">1. Query Plan</h2>
<p>我们在接收到一段SQL后需要对语句进行解释，变成让计算机可以理解的格式。这个格式就是 query plan，是由不同的操作组成的Tree结构。</p>
<p>根节点是我们要返回的数据，中间节点是数据的处理过程，子节点是读取数据的过程。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211127-656099.png" alt="1590325886471" /></p>
<h2 id="2-processing-models">2. Processing Models</h2>
<p>在有了Query Plan 后就知道需要进行什么操作了。现在考虑怎么执行，执行的顺序和方式。</p>
<h3 id="1-iterator-model">1. Iterator Model</h3>
<p>每一个节点都是一个 Iterator，不断的调用next，next的结果就是它的子树的内容。调用完后进行emit返回给自己父级。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211512-974350.png" alt="1590326111591" /></p>
<p>通过自顶向下的调用来完成查询。毕竟数据可能大过缓冲池，多次进行IO读取速度太慢，而且生产太多中间数据不太好。会用到pipeline的方式，尽量减少中间数据产生，当然在进行join，subQuery、order 等操作时，会发生 pipeline break。</p>
<h3 id="2-materialization-model">2. Materialization Model</h3>
<p>这种方法是Iterate 的过程中，直接获取全部的子数据，再进行计算。这种方式比较适合 OLTP ，因为这种操作一般获取少量的 tuple，获取完数据再处理更加方便。不使用于 OLAP ，因为海量数据读不完，可能需要其他的分盘、分数据等操作。</p>
<h3 id="3-vectorization-model">3. Vectorization Model</h3>
<p>我们知道数据是存储再一个个的 Page 当中的，所以我们读数据也应该是按Page为单位。所以我们在 Iterator Model 的基础上进行进行一些优化，每次自上而下的调用不是读一个tuple就返回，而是读完整个Block才返回。</p>
<h2 id="3-access-methods">3. Access Methods</h2>
<p>现在让我们讨论读取表中数据的方法。</p>
<h3 id="31-顺序扫描">3.1 顺序扫描</h3>
<p>就硬扫描，横向遍历读取Table中每个Page的数据。但我们可以做一些优化</p>
<ol>
<li>预读取</li>
<li>并行读取</li>
<li>读完数据不写回缓冲池，因为我们只扫描一遍就过了</li>
<li>Zone Map：通过在Block上写一些每个重要属性的范围来判断是否要读</li>
</ol>
<h3 id="32-index-scan">3.2 Index Scan</h3>
<p>顾名思义根据索引来读取数据，不多说。</p>
<h3 id="33-multi-index-scan">3.3 Multi-Index Scan</h3>
<p>可以通过对每个索引进行扫描读取到一个Set中，然后在对它们进行去重。期间可以运用 bitmap、bloom filter 的数据结构进行去重和减少无效读取</p>
<h1 id="parallel-query">Parallel Query</h1>
<h2 id="1-parallel-database-和-distribute-database">1. Parallel database 和 distribute database</h2>
<p><strong>parallel database</strong> wiki：Parallel databases improve processing and <a href="https://en.wikipedia.org/wiki/Input/output" target="_blank">input/output</a> speeds by using multiple <a href="https://en.wikipedia.org/wiki/CPU" target="_blank">CPUs</a> and disks in parallel.</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152736-306482.png" alt="1590391623644" /></p>
<p>可以知道并行数据库就是同时使用多个CPU core 和多个 磁盘进行读写来横向扩展速度。</p>
<p>根据不同数据库可以分为两种水平分区和垂直分区</p>
<p>下图是根据列划分</p>
<p><img src="C:\Users\hasaki\AppData\Roaming\Typora\typora-user-images\1590391753315.png" alt="1590391753315" /></p>
<p>误区：SSD多通道主控多个闪存可以同时读写同一个文件，并且突破了机械硬盘的物理移动地址限制，所以更快，和上面不是同一概念。</p>
<p>**Distributed DBMS:**数据本身存储在多个地区，详细可以看之前写的mit6.824中的一些实现部分。</p>
<h2 id="2-并行类型">2. 并行类型</h2>
<ol>
<li>单个查询的并行操作</li>
</ol>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151409-594975.png" alt="1590390849433" /></p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152519-603670.png" alt="1590391517437" /></p>
<ol start="2">
<li>
<p>并行多个查询操作</p>
<p>利用多核优势同时进行多个 查询 操作。</p>
</li>
</ol>
<h2 id="3-process-model">3. Process Model</h2>
<h3 id="31-process-per-worker">3.1 Process per worker</h3>
<p>这种方式依靠 OS 的调度，共享相同的数据结构，在一个进程 crash 掉后不会影响其他的进程，IBM的DB2和Oracle 以及 postgreSQL使用这种</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151940-963868.png" alt="1590391180715" /></p>
<h3 id="32-process-pool">3.2 Process Pool</h3>
<p>每当想使用一个进程时都会去进程池中调用一个进程，也是上几家公司在用</p>
<h3 id="33-thread-per-worker">3.3 Thread per worker</h3>
<p>在单进程中创建一个线程池，想要调度时就去线程池中取，MySQL、SQLServer以及Oracle都在用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152331-402586.png" alt="1590391411472" /></p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=null, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-05-25 16:20:50.0, updateTime=2020-05-25 16:20:50.0}
2020-05-25 16:30:33.767  INFO 12020 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:30:33.767  INFO 12020 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:30:35.000  INFO 12020 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:30:35.085  INFO 12020 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:30:35.086  INFO 12020 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:30:35.477  INFO 12020 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/65', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[65, {}]}
2020-05-25 16:30:35.653  INFO 12020 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:30:35.653  INFO 12020 --- [http-nio-8080-exec-8] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:30:41.069  INFO 12020 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:30:41.101  INFO 12020 --- [http-nio-8080-exec-5] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=65, title='呢哇', content='<h1 id="query">Query</h1>
<h2 id="1-query-plan">1. Query Plan</h2>
<p>我们在接收到一段SQL后需要对语句进行解释，变成让计算机可以理解的格式。这个格式就是 query plan，是由不同的操作组成的Tree结构。</p>
<p>根节点是我们要返回的数据，中间节点是数据的处理过程，子节点是读取数据的过程。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211127-656099.png" alt="1590325886471" /></p>
<h2 id="2-processing-models">2. Processing Models</h2>
<p>在有了Query Plan 后就知道需要进行什么操作了。现在考虑怎么执行，执行的顺序和方式。</p>
<h3 id="1-iterator-model">1. Iterator Model</h3>
<p>每一个节点都是一个 Iterator，不断的调用next，next的结果就是它的子树的内容。调用完后进行emit返回给自己父级。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211512-974350.png" alt="1590326111591" /></p>
<p>通过自顶向下的调用来完成查询。毕竟数据可能大过缓冲池，多次进行IO读取速度太慢，而且生产太多中间数据不太好。会用到pipeline的方式，尽量减少中间数据产生，当然在进行join，subQuery、order 等操作时，会发生 pipeline break。</p>
<h3 id="2-materialization-model">2. Materialization Model</h3>
<p>这种方法是Iterate 的过程中，直接获取全部的子数据，再进行计算。这种方式比较适合 OLTP ，因为这种操作一般获取少量的 tuple，获取完数据再处理更加方便。不使用于 OLAP ，因为海量数据读不完，可能需要其他的分盘、分数据等操作。</p>
<h3 id="3-vectorization-model">3. Vectorization Model</h3>
<p>我们知道数据是存储再一个个的 Page 当中的，所以我们读数据也应该是按Page为单位。所以我们在 Iterator Model 的基础上进行进行一些优化，每次自上而下的调用不是读一个tuple就返回，而是读完整个Block才返回。</p>
<h2 id="3-access-methods">3. Access Methods</h2>
<p>现在让我们讨论读取表中数据的方法。</p>
<h3 id="31-顺序扫描">3.1 顺序扫描</h3>
<p>就硬扫描，横向遍历读取Table中每个Page的数据。但我们可以做一些优化</p>
<ol>
<li>预读取</li>
<li>并行读取</li>
<li>读完数据不写回缓冲池，因为我们只扫描一遍就过了</li>
<li>Zone Map：通过在Block上写一些每个重要属性的范围来判断是否要读</li>
</ol>
<h3 id="32-index-scan">3.2 Index Scan</h3>
<p>顾名思义根据索引来读取数据，不多说。</p>
<h3 id="33-multi-index-scan">3.3 Multi-Index Scan</h3>
<p>可以通过对每个索引进行扫描读取到一个Set中，然后在对它们进行去重。期间可以运用 bitmap、bloom filter 的数据结构进行去重和减少无效读取</p>
<h1 id="parallel-query">Parallel Query</h1>
<h2 id="1-parallel-database-和-distribute-database">1. Parallel database 和 distribute database</h2>
<p><strong>parallel database</strong> wiki：Parallel databases improve processing and <a href="https://en.wikipedia.org/wiki/Input/output" target="_blank">input/output</a> speeds by using multiple <a href="https://en.wikipedia.org/wiki/CPU" target="_blank">CPUs</a> and disks in parallel.</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152736-306482.png" alt="1590391623644" /></p>
<p>可以知道并行数据库就是同时使用多个CPU core 和多个 磁盘进行读写来横向扩展速度。</p>
<p>根据不同数据库可以分为两种水平分区和垂直分区</p>
<p>下图是根据列划分</p>
<p><img src="C:\Users\hasaki\AppData\Roaming\Typora\typora-user-images\1590391753315.png" alt="1590391753315" /></p>
<p>误区：SSD多通道主控多个闪存可以同时读写同一个文件，并且突破了机械硬盘的物理移动地址限制，所以更快，和上面不是同一概念。</p>
<p>**Distributed DBMS:**数据本身存储在多个地区，详细可以看之前写的mit6.824中的一些实现部分。</p>
<h2 id="2-并行类型">2. 并行类型</h2>
<ol>
<li>单个查询的并行操作</li>
</ol>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151409-594975.png" alt="1590390849433" /></p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152519-603670.png" alt="1590391517437" /></p>
<ol start="2">
<li>
<p>并行多个查询操作</p>
<p>利用多核优势同时进行多个 查询 操作。</p>
</li>
</ol>
<h2 id="3-process-model">3. Process Model</h2>
<h3 id="31-process-per-worker">3.1 Process per worker</h3>
<p>这种方式依靠 OS 的调度，共享相同的数据结构，在一个进程 crash 掉后不会影响其他的进程，IBM的DB2和Oracle 以及 postgreSQL使用这种</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151940-963868.png" alt="1590391180715" /></p>
<h3 id="32-process-pool">3.2 Process Pool</h3>
<p>每当想使用一个进程时都会去进程池中调用一个进程，也是上几家公司在用</p>
<h3 id="33-thread-per-worker">3.3 Thread per worker</h3>
<p>在单进程中创建一个线程池，想要调度时就去线程池中取，MySQL、SQLServer以及Oracle都在用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152331-402586.png" alt="1590391411472" /></p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=null, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-05-25 16:20:50.0, updateTime=2020-05-25 16:20:50.0}
2020-05-25 16:30:41.102  INFO 12020 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:30:41.102  INFO 12020 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:30:41.764  INFO 12020 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:30:41.780  INFO 12020 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:30:41.780  INFO 12020 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:30:42.039  INFO 12020 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/65', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[65, {}]}
2020-05-25 16:30:42.048  INFO 12020 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:30:42.048  INFO 12020 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:32:00.993  INFO 45600 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 45600 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:32:01.000 DEBUG 45600 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:32:01.000  INFO 45600 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:32:01.078  INFO 45600 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:32:01.081  INFO 45600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:32:01.081  INFO 45600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:32:02.190  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:32:02.192  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:32:02.253  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:32:02.255  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:32:02.257  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:32:02.259  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:32:02.261  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:32:02.262  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 65ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:32:02.269  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:32:02.269  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:32:02.286  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:32:02.288  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:32:02.289  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:32:02.290  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:32:02.291  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:32:02.291  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:32:02.305  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:32:02.305  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:32:02.378  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 67ms. Found 5 JPA repository interfaces.
2020-05-25 16:32:02.401  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:32:02.402  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:32:02.433  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:32:02.434  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:32:02.435  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:32:02.435  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:32:02.436  INFO 45600 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:32:02.436  INFO 45600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
2020-05-25 16:32:02.911  INFO 45600 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:32:03.541  INFO 45600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:32:03.553  INFO 45600 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:32:03.554  INFO 45600 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:32:03.557  INFO 45600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:32:03.557  INFO 45600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:32:03.557  INFO 45600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:32:03.561  INFO 45600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:32:03.709  INFO 45600 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:32:03.709  INFO 45600 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2628 ms
2020-05-25 16:32:03.950  INFO 45600 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:32:04.021  INFO 45600 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:32:04.157  INFO 45600 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:32:04.259  INFO 45600 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:32:04.388  INFO 45600 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:32:04.407  INFO 45600 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:32:05.306  INFO 45600 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:32:05.312  INFO 45600 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:32:05.385  INFO 45600 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:32:06.547  WARN 45600 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:32:06.813  INFO 45600 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:32:06.938  INFO 45600 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:32:07.971  INFO 45600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:32:07.974  INFO 45600 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 8.517 seconds (JVM running for 10.547)
2020-05-25 16:32:15.373  INFO 45600 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:32:15.374  INFO 45600 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:32:15.391  INFO 45600 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-05-25 16:32:15.443  INFO 45600 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:32:15.554  INFO 45600 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:32:15.559 ERROR 45600 --- [http-nio-8080-exec-1] c.y.b.h.ControllerExceptionHandler       : Request URL+http://127.0.0.1:8080/blog/65,Exception {}

java.lang.NullPointerException: null
	at com.yang.blog.service.BlogServiceImpl.updateBlogView(BlogServiceImpl.java:117)
	at com.yang.blog.service.BlogServiceImpl.getAndConvert(BlogServiceImpl.java:48)
	at com.yang.blog.web.IndexController.blog(IndexController.java:40)
	at com.yang.blog.web.IndexController$$FastClassBySpringCGLIB$$47ad99e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.yang.blog.web.IndexController$$EnhancerBySpringCGLIB$$484a3481.blog(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)

2020-05-25 16:32:15.564  WARN 45600 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-05-25 16:33:15.415  INFO 21312 --- [restartedMain] com.yang.blog.BlogApplication            : Starting BlogApplication on DESKTOP-IHFCB9J with PID 21312 (C:\Users\hasaki\IdeaProjects\blog\target\classes started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:33:15.435 DEBUG 21312 --- [restartedMain] com.yang.blog.BlogApplication            : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:33:15.436  INFO 21312 --- [restartedMain] com.yang.blog.BlogApplication            : The following profiles are active: dev
2020-05-25 16:33:15.582  INFO 21312 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\hasaki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/hasaki/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-05-25 16:33:15.583  INFO 21312 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-25 16:33:15.584  INFO 21312 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-25 16:33:16.743  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:33:16.745  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:33:16.804  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:33:16.806  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:33:16.808  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:33:16.810  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:33:16.813  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:33:16.814  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 62ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:33:16.820  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:33:16.821  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:33:16.834  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:33:16.835  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:33:16.835  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:33:16.836  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:33:16.837  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:33:16.837  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:33:16.849  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:33:16.849  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:33:16.936  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 83ms. Found 5 JPA repository interfaces.
2020-05-25 16:33:16.965  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:33:16.967  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:33:16.997  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:33:16.999  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:33:16.999  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:33:17.001  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:33:17.002  INFO 21312 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:33:17.002  INFO 21312 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2020-05-25 16:33:17.562  INFO 21312 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:33:18.649  INFO 21312 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-05-25 16:33:18.677  INFO 21312 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-25 16:33:18.680  INFO 21312 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-25 16:33:18.688  INFO 21312 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:33:18.689  INFO 21312 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:33:18.689  INFO 21312 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:33:18.693  INFO 21312 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:33:18.879  INFO 21312 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-25 16:33:18.880  INFO 21312 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3296 ms
2020-05-25 16:33:19.116  INFO 21312 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-25 16:33:19.188  INFO 21312 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-05-25 16:33:19.307  INFO 21312 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-25 16:33:19.402  INFO 21312 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-05-25 16:33:19.523  INFO 21312 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-05-25 16:33:19.539  INFO 21312 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-05-25 16:33:20.473  INFO 21312 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-25 16:33:20.480  INFO 21312 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-25 16:33:20.552  INFO 21312 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-05-25 16:33:21.670  WARN 21312 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-25 16:33:21.943  INFO 21312 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-25 16:33:22.069  INFO 21312 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-05-25 16:33:23.121  INFO 21312 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-05-25 16:33:23.124  INFO 21312 --- [restartedMain] com.yang.blog.BlogApplication            : Started BlogApplication in 9.026 seconds (JVM running for 10.971)
2020-05-25 16:33:36.399  INFO 21312 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:33:36.401  INFO 21312 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-25 16:33:36.418  INFO 21312 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-05-25 16:33:36.465  INFO 21312 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:33:36.696  INFO 21312 --- [http-nio-8080-exec-1] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=65, title='呢哇', content='<h1 id="query">Query</h1>
<h2 id="1-query-plan">1. Query Plan</h2>
<p>我们在接收到一段SQL后需要对语句进行解释，变成让计算机可以理解的格式。这个格式就是 query plan，是由不同的操作组成的Tree结构。</p>
<p>根节点是我们要返回的数据，中间节点是数据的处理过程，子节点是读取数据的过程。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211127-656099.png" alt="1590325886471" /></p>
<h2 id="2-processing-models">2. Processing Models</h2>
<p>在有了Query Plan 后就知道需要进行什么操作了。现在考虑怎么执行，执行的顺序和方式。</p>
<h3 id="1-iterator-model">1. Iterator Model</h3>
<p>每一个节点都是一个 Iterator，不断的调用next，next的结果就是它的子树的内容。调用完后进行emit返回给自己父级。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211512-974350.png" alt="1590326111591" /></p>
<p>通过自顶向下的调用来完成查询。毕竟数据可能大过缓冲池，多次进行IO读取速度太慢，而且生产太多中间数据不太好。会用到pipeline的方式，尽量减少中间数据产生，当然在进行join，subQuery、order 等操作时，会发生 pipeline break。</p>
<h3 id="2-materialization-model">2. Materialization Model</h3>
<p>这种方法是Iterate 的过程中，直接获取全部的子数据，再进行计算。这种方式比较适合 OLTP ，因为这种操作一般获取少量的 tuple，获取完数据再处理更加方便。不使用于 OLAP ，因为海量数据读不完，可能需要其他的分盘、分数据等操作。</p>
<h3 id="3-vectorization-model">3. Vectorization Model</h3>
<p>我们知道数据是存储再一个个的 Page 当中的，所以我们读数据也应该是按Page为单位。所以我们在 Iterator Model 的基础上进行进行一些优化，每次自上而下的调用不是读一个tuple就返回，而是读完整个Block才返回。</p>
<h2 id="3-access-methods">3. Access Methods</h2>
<p>现在让我们讨论读取表中数据的方法。</p>
<h3 id="31-顺序扫描">3.1 顺序扫描</h3>
<p>就硬扫描，横向遍历读取Table中每个Page的数据。但我们可以做一些优化</p>
<ol>
<li>预读取</li>
<li>并行读取</li>
<li>读完数据不写回缓冲池，因为我们只扫描一遍就过了</li>
<li>Zone Map：通过在Block上写一些每个重要属性的范围来判断是否要读</li>
</ol>
<h3 id="32-index-scan">3.2 Index Scan</h3>
<p>顾名思义根据索引来读取数据，不多说。</p>
<h3 id="33-multi-index-scan">3.3 Multi-Index Scan</h3>
<p>可以通过对每个索引进行扫描读取到一个Set中，然后在对它们进行去重。期间可以运用 bitmap、bloom filter 的数据结构进行去重和减少无效读取</p>
<h1 id="parallel-query">Parallel Query</h1>
<h2 id="1-parallel-database-和-distribute-database">1. Parallel database 和 distribute database</h2>
<p><strong>parallel database</strong> wiki：Parallel databases improve processing and <a href="https://en.wikipedia.org/wiki/Input/output" target="_blank">input/output</a> speeds by using multiple <a href="https://en.wikipedia.org/wiki/CPU" target="_blank">CPUs</a> and disks in parallel.</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152736-306482.png" alt="1590391623644" /></p>
<p>可以知道并行数据库就是同时使用多个CPU core 和多个 磁盘进行读写来横向扩展速度。</p>
<p>根据不同数据库可以分为两种水平分区和垂直分区</p>
<p>下图是根据列划分</p>
<p><img src="C:\Users\hasaki\AppData\Roaming\Typora\typora-user-images\1590391753315.png" alt="1590391753315" /></p>
<p>误区：SSD多通道主控多个闪存可以同时读写同一个文件，并且突破了机械硬盘的物理移动地址限制，所以更快，和上面不是同一概念。</p>
<p>**Distributed DBMS:**数据本身存储在多个地区，详细可以看之前写的mit6.824中的一些实现部分。</p>
<h2 id="2-并行类型">2. 并行类型</h2>
<ol>
<li>单个查询的并行操作</li>
</ol>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151409-594975.png" alt="1590390849433" /></p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152519-603670.png" alt="1590391517437" /></p>
<ol start="2">
<li>
<p>并行多个查询操作</p>
<p>利用多核优势同时进行多个 查询 操作。</p>
</li>
</ol>
<h2 id="3-process-model">3. Process Model</h2>
<h3 id="31-process-per-worker">3.1 Process per worker</h3>
<p>这种方式依靠 OS 的调度，共享相同的数据结构，在一个进程 crash 掉后不会影响其他的进程，IBM的DB2和Oracle 以及 postgreSQL使用这种</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151940-963868.png" alt="1590391180715" /></p>
<h3 id="32-process-pool">3.2 Process Pool</h3>
<p>每当想使用一个进程时都会去进程池中调用一个进程，也是上几家公司在用</p>
<h3 id="33-thread-per-worker">3.3 Thread per worker</h3>
<p>在单进程中创建一个线程池，想要调度时就去线程池中取，MySQL、SQLServer以及Oracle都在用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152331-402586.png" alt="1590391411472" /></p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=2, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-05-25 16:20:50.0, updateTime=2020-05-25 16:20:50.0}
2020-05-25 16:33:36.697  INFO 21312 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:36.698  INFO 21312 --- [http-nio-8080-exec-1] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:33:37.883  INFO 21312 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:33:37.965  INFO 21312 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:37.966  INFO 21312 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:33:38.343  INFO 21312 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/65', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[65, {}]}
2020-05-25 16:33:38.553  INFO 21312 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:38.554  INFO 21312 --- [http-nio-8080-exec-4] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:33:40.570  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:33:40.602  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=65, title='呢哇', content='<h1 id="query">Query</h1>
<h2 id="1-query-plan">1. Query Plan</h2>
<p>我们在接收到一段SQL后需要对语句进行解释，变成让计算机可以理解的格式。这个格式就是 query plan，是由不同的操作组成的Tree结构。</p>
<p>根节点是我们要返回的数据，中间节点是数据的处理过程，子节点是读取数据的过程。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211127-656099.png" alt="1590325886471" /></p>
<h2 id="2-processing-models">2. Processing Models</h2>
<p>在有了Query Plan 后就知道需要进行什么操作了。现在考虑怎么执行，执行的顺序和方式。</p>
<h3 id="1-iterator-model">1. Iterator Model</h3>
<p>每一个节点都是一个 Iterator，不断的调用next，next的结果就是它的子树的内容。调用完后进行emit返回给自己父级。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211512-974350.png" alt="1590326111591" /></p>
<p>通过自顶向下的调用来完成查询。毕竟数据可能大过缓冲池，多次进行IO读取速度太慢，而且生产太多中间数据不太好。会用到pipeline的方式，尽量减少中间数据产生，当然在进行join，subQuery、order 等操作时，会发生 pipeline break。</p>
<h3 id="2-materialization-model">2. Materialization Model</h3>
<p>这种方法是Iterate 的过程中，直接获取全部的子数据，再进行计算。这种方式比较适合 OLTP ，因为这种操作一般获取少量的 tuple，获取完数据再处理更加方便。不使用于 OLAP ，因为海量数据读不完，可能需要其他的分盘、分数据等操作。</p>
<h3 id="3-vectorization-model">3. Vectorization Model</h3>
<p>我们知道数据是存储再一个个的 Page 当中的，所以我们读数据也应该是按Page为单位。所以我们在 Iterator Model 的基础上进行进行一些优化，每次自上而下的调用不是读一个tuple就返回，而是读完整个Block才返回。</p>
<h2 id="3-access-methods">3. Access Methods</h2>
<p>现在让我们讨论读取表中数据的方法。</p>
<h3 id="31-顺序扫描">3.1 顺序扫描</h3>
<p>就硬扫描，横向遍历读取Table中每个Page的数据。但我们可以做一些优化</p>
<ol>
<li>预读取</li>
<li>并行读取</li>
<li>读完数据不写回缓冲池，因为我们只扫描一遍就过了</li>
<li>Zone Map：通过在Block上写一些每个重要属性的范围来判断是否要读</li>
</ol>
<h3 id="32-index-scan">3.2 Index Scan</h3>
<p>顾名思义根据索引来读取数据，不多说。</p>
<h3 id="33-multi-index-scan">3.3 Multi-Index Scan</h3>
<p>可以通过对每个索引进行扫描读取到一个Set中，然后在对它们进行去重。期间可以运用 bitmap、bloom filter 的数据结构进行去重和减少无效读取</p>
<h1 id="parallel-query">Parallel Query</h1>
<h2 id="1-parallel-database-和-distribute-database">1. Parallel database 和 distribute database</h2>
<p><strong>parallel database</strong> wiki：Parallel databases improve processing and <a href="https://en.wikipedia.org/wiki/Input/output" target="_blank">input/output</a> speeds by using multiple <a href="https://en.wikipedia.org/wiki/CPU" target="_blank">CPUs</a> and disks in parallel.</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152736-306482.png" alt="1590391623644" /></p>
<p>可以知道并行数据库就是同时使用多个CPU core 和多个 磁盘进行读写来横向扩展速度。</p>
<p>根据不同数据库可以分为两种水平分区和垂直分区</p>
<p>下图是根据列划分</p>
<p><img src="C:\Users\hasaki\AppData\Roaming\Typora\typora-user-images\1590391753315.png" alt="1590391753315" /></p>
<p>误区：SSD多通道主控多个闪存可以同时读写同一个文件，并且突破了机械硬盘的物理移动地址限制，所以更快，和上面不是同一概念。</p>
<p>**Distributed DBMS:**数据本身存储在多个地区，详细可以看之前写的mit6.824中的一些实现部分。</p>
<h2 id="2-并行类型">2. 并行类型</h2>
<ol>
<li>单个查询的并行操作</li>
</ol>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151409-594975.png" alt="1590390849433" /></p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152519-603670.png" alt="1590391517437" /></p>
<ol start="2">
<li>
<p>并行多个查询操作</p>
<p>利用多核优势同时进行多个 查询 操作。</p>
</li>
</ol>
<h2 id="3-process-model">3. Process Model</h2>
<h3 id="31-process-per-worker">3.1 Process per worker</h3>
<p>这种方式依靠 OS 的调度，共享相同的数据结构，在一个进程 crash 掉后不会影响其他的进程，IBM的DB2和Oracle 以及 postgreSQL使用这种</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151940-963868.png" alt="1590391180715" /></p>
<h3 id="32-process-pool">3.2 Process Pool</h3>
<p>每当想使用一个进程时都会去进程池中调用一个进程，也是上几家公司在用</p>
<h3 id="33-thread-per-worker">3.3 Thread per worker</h3>
<p>在单进程中创建一个线程池，想要调度时就去线程池中取，MySQL、SQLServer以及Oracle都在用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152331-402586.png" alt="1590391411472" /></p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=3, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-05-25 16:20:50.0, updateTime=2020-05-25 16:20:50.0}
2020-05-25 16:33:40.603  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:40.603  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:33:41.217  INFO 21312 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:33:41.234  INFO 21312 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:41.234  INFO 21312 --- [http-nio-8080-exec-5] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:33:41.463  INFO 21312 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/65', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[65, {}]}
2020-05-25 16:33:41.464  INFO 21312 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:41.465  INFO 21312 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:33:42.902  INFO 21312 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:33:42.930  INFO 21312 --- [http-nio-8080-exec-2] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=65, title='呢哇', content='<h1 id="query">Query</h1>
<h2 id="1-query-plan">1. Query Plan</h2>
<p>我们在接收到一段SQL后需要对语句进行解释，变成让计算机可以理解的格式。这个格式就是 query plan，是由不同的操作组成的Tree结构。</p>
<p>根节点是我们要返回的数据，中间节点是数据的处理过程，子节点是读取数据的过程。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211127-656099.png" alt="1590325886471" /></p>
<h2 id="2-processing-models">2. Processing Models</h2>
<p>在有了Query Plan 后就知道需要进行什么操作了。现在考虑怎么执行，执行的顺序和方式。</p>
<h3 id="1-iterator-model">1. Iterator Model</h3>
<p>每一个节点都是一个 Iterator，不断的调用next，next的结果就是它的子树的内容。调用完后进行emit返回给自己父级。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211512-974350.png" alt="1590326111591" /></p>
<p>通过自顶向下的调用来完成查询。毕竟数据可能大过缓冲池，多次进行IO读取速度太慢，而且生产太多中间数据不太好。会用到pipeline的方式，尽量减少中间数据产生，当然在进行join，subQuery、order 等操作时，会发生 pipeline break。</p>
<h3 id="2-materialization-model">2. Materialization Model</h3>
<p>这种方法是Iterate 的过程中，直接获取全部的子数据，再进行计算。这种方式比较适合 OLTP ，因为这种操作一般获取少量的 tuple，获取完数据再处理更加方便。不使用于 OLAP ，因为海量数据读不完，可能需要其他的分盘、分数据等操作。</p>
<h3 id="3-vectorization-model">3. Vectorization Model</h3>
<p>我们知道数据是存储再一个个的 Page 当中的，所以我们读数据也应该是按Page为单位。所以我们在 Iterator Model 的基础上进行进行一些优化，每次自上而下的调用不是读一个tuple就返回，而是读完整个Block才返回。</p>
<h2 id="3-access-methods">3. Access Methods</h2>
<p>现在让我们讨论读取表中数据的方法。</p>
<h3 id="31-顺序扫描">3.1 顺序扫描</h3>
<p>就硬扫描，横向遍历读取Table中每个Page的数据。但我们可以做一些优化</p>
<ol>
<li>预读取</li>
<li>并行读取</li>
<li>读完数据不写回缓冲池，因为我们只扫描一遍就过了</li>
<li>Zone Map：通过在Block上写一些每个重要属性的范围来判断是否要读</li>
</ol>
<h3 id="32-index-scan">3.2 Index Scan</h3>
<p>顾名思义根据索引来读取数据，不多说。</p>
<h3 id="33-multi-index-scan">3.3 Multi-Index Scan</h3>
<p>可以通过对每个索引进行扫描读取到一个Set中，然后在对它们进行去重。期间可以运用 bitmap、bloom filter 的数据结构进行去重和减少无效读取</p>
<h1 id="parallel-query">Parallel Query</h1>
<h2 id="1-parallel-database-和-distribute-database">1. Parallel database 和 distribute database</h2>
<p><strong>parallel database</strong> wiki：Parallel databases improve processing and <a href="https://en.wikipedia.org/wiki/Input/output" target="_blank">input/output</a> speeds by using multiple <a href="https://en.wikipedia.org/wiki/CPU" target="_blank">CPUs</a> and disks in parallel.</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152736-306482.png" alt="1590391623644" /></p>
<p>可以知道并行数据库就是同时使用多个CPU core 和多个 磁盘进行读写来横向扩展速度。</p>
<p>根据不同数据库可以分为两种水平分区和垂直分区</p>
<p>下图是根据列划分</p>
<p><img src="C:\Users\hasaki\AppData\Roaming\Typora\typora-user-images\1590391753315.png" alt="1590391753315" /></p>
<p>误区：SSD多通道主控多个闪存可以同时读写同一个文件，并且突破了机械硬盘的物理移动地址限制，所以更快，和上面不是同一概念。</p>
<p>**Distributed DBMS:**数据本身存储在多个地区，详细可以看之前写的mit6.824中的一些实现部分。</p>
<h2 id="2-并行类型">2. 并行类型</h2>
<ol>
<li>单个查询的并行操作</li>
</ol>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151409-594975.png" alt="1590390849433" /></p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152519-603670.png" alt="1590391517437" /></p>
<ol start="2">
<li>
<p>并行多个查询操作</p>
<p>利用多核优势同时进行多个 查询 操作。</p>
</li>
</ol>
<h2 id="3-process-model">3. Process Model</h2>
<h3 id="31-process-per-worker">3.1 Process per worker</h3>
<p>这种方式依靠 OS 的调度，共享相同的数据结构，在一个进程 crash 掉后不会影响其他的进程，IBM的DB2和Oracle 以及 postgreSQL使用这种</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151940-963868.png" alt="1590391180715" /></p>
<h3 id="32-process-pool">3.2 Process Pool</h3>
<p>每当想使用一个进程时都会去进程池中调用一个进程，也是上几家公司在用</p>
<h3 id="33-thread-per-worker">3.3 Thread per worker</h3>
<p>在单进程中创建一个线程池，想要调度时就去线程池中取，MySQL、SQLServer以及Oracle都在用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152331-402586.png" alt="1590391411472" /></p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=4, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-05-25 16:20:50.0, updateTime=2020-05-25 16:20:50.0}
2020-05-25 16:33:42.931  INFO 21312 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:42.931  INFO 21312 --- [http-nio-8080-exec-2] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:33:43.467  INFO 21312 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:33:43.483  INFO 21312 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:43.483  INFO 21312 --- [http-nio-8080-exec-10] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:33:43.749  INFO 21312 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/65', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[65, {}]}
2020-05-25 16:33:43.752  INFO 21312 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:43.752  INFO 21312 --- [http-nio-8080-exec-3] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:33:45.571  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/blog/65', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.blog', args=[65, {}]}
2020-05-25 16:33:45.591  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.web.IndexController        : Blog{userUser{id=1, nickname='yangshen', username='yangshen', password='81dc9bdb52d04dc20036dbd8313ed055', email='614989768@qq.com', avatar='https://picsum.photos/id/1011/800/400', type=1, createTime=null, updateTime=null}id=65, title='呢哇', content='<h1 id="query">Query</h1>
<h2 id="1-query-plan">1. Query Plan</h2>
<p>我们在接收到一段SQL后需要对语句进行解释，变成让计算机可以理解的格式。这个格式就是 query plan，是由不同的操作组成的Tree结构。</p>
<p>根节点是我们要返回的数据，中间节点是数据的处理过程，子节点是读取数据的过程。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211127-656099.png" alt="1590325886471" /></p>
<h2 id="2-processing-models">2. Processing Models</h2>
<p>在有了Query Plan 后就知道需要进行什么操作了。现在考虑怎么执行，执行的顺序和方式。</p>
<h3 id="1-iterator-model">1. Iterator Model</h3>
<p>每一个节点都是一个 Iterator，不断的调用next，next的结果就是它的子树的内容。调用完后进行emit返回给自己父级。</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/24/211512-974350.png" alt="1590326111591" /></p>
<p>通过自顶向下的调用来完成查询。毕竟数据可能大过缓冲池，多次进行IO读取速度太慢，而且生产太多中间数据不太好。会用到pipeline的方式，尽量减少中间数据产生，当然在进行join，subQuery、order 等操作时，会发生 pipeline break。</p>
<h3 id="2-materialization-model">2. Materialization Model</h3>
<p>这种方法是Iterate 的过程中，直接获取全部的子数据，再进行计算。这种方式比较适合 OLTP ，因为这种操作一般获取少量的 tuple，获取完数据再处理更加方便。不使用于 OLAP ，因为海量数据读不完，可能需要其他的分盘、分数据等操作。</p>
<h3 id="3-vectorization-model">3. Vectorization Model</h3>
<p>我们知道数据是存储再一个个的 Page 当中的，所以我们读数据也应该是按Page为单位。所以我们在 Iterator Model 的基础上进行进行一些优化，每次自上而下的调用不是读一个tuple就返回，而是读完整个Block才返回。</p>
<h2 id="3-access-methods">3. Access Methods</h2>
<p>现在让我们讨论读取表中数据的方法。</p>
<h3 id="31-顺序扫描">3.1 顺序扫描</h3>
<p>就硬扫描，横向遍历读取Table中每个Page的数据。但我们可以做一些优化</p>
<ol>
<li>预读取</li>
<li>并行读取</li>
<li>读完数据不写回缓冲池，因为我们只扫描一遍就过了</li>
<li>Zone Map：通过在Block上写一些每个重要属性的范围来判断是否要读</li>
</ol>
<h3 id="32-index-scan">3.2 Index Scan</h3>
<p>顾名思义根据索引来读取数据，不多说。</p>
<h3 id="33-multi-index-scan">3.3 Multi-Index Scan</h3>
<p>可以通过对每个索引进行扫描读取到一个Set中，然后在对它们进行去重。期间可以运用 bitmap、bloom filter 的数据结构进行去重和减少无效读取</p>
<h1 id="parallel-query">Parallel Query</h1>
<h2 id="1-parallel-database-和-distribute-database">1. Parallel database 和 distribute database</h2>
<p><strong>parallel database</strong> wiki：Parallel databases improve processing and <a href="https://en.wikipedia.org/wiki/Input/output" target="_blank">input/output</a> speeds by using multiple <a href="https://en.wikipedia.org/wiki/CPU" target="_blank">CPUs</a> and disks in parallel.</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152736-306482.png" alt="1590391623644" /></p>
<p>可以知道并行数据库就是同时使用多个CPU core 和多个 磁盘进行读写来横向扩展速度。</p>
<p>根据不同数据库可以分为两种水平分区和垂直分区</p>
<p>下图是根据列划分</p>
<p><img src="C:\Users\hasaki\AppData\Roaming\Typora\typora-user-images\1590391753315.png" alt="1590391753315" /></p>
<p>误区：SSD多通道主控多个闪存可以同时读写同一个文件，并且突破了机械硬盘的物理移动地址限制，所以更快，和上面不是同一概念。</p>
<p>**Distributed DBMS:**数据本身存储在多个地区，详细可以看之前写的mit6.824中的一些实现部分。</p>
<h2 id="2-并行类型">2. 并行类型</h2>
<ol>
<li>单个查询的并行操作</li>
</ol>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151409-594975.png" alt="1590390849433" /></p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152519-603670.png" alt="1590391517437" /></p>
<ol start="2">
<li>
<p>并行多个查询操作</p>
<p>利用多核优势同时进行多个 查询 操作。</p>
</li>
</ol>
<h2 id="3-process-model">3. Process Model</h2>
<h3 id="31-process-per-worker">3.1 Process per worker</h3>
<p>这种方式依靠 OS 的调度，共享相同的数据结构，在一个进程 crash 掉后不会影响其他的进程，IBM的DB2和Oracle 以及 postgreSQL使用这种</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/151940-963868.png" alt="1590391180715" /></p>
<h3 id="32-process-pool">3.2 Process Pool</h3>
<p>每当想使用一个进程时都会去进程池中调用一个进程，也是上几家公司在用</p>
<h3 id="33-thread-per-worker">3.3 Thread per worker</h3>
<p>在单进程中创建一个线程池，想要调度时就去线程池中取，MySQL、SQLServer以及Oracle都在用</p>
<p><img src="https://raw.githubusercontent.com/Yang6149/typora-image/master/demo/202005/25/152331-402586.png" alt="1590391411472" /></p>
', firstPicture='https://images.unsplash.com/photo-1590308272950-bac037a11cd8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80', flag='', views=5, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=2020-05-25 16:20:50.0, updateTime=2020-05-25 16:20:50.0}
2020-05-25 16:33:45.592  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:45.594  INFO 21312 --- [http-nio-8080-exec-7] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog
2020-05-25 16:33:46.323  INFO 21312 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/footer/newblog', ip='127.0.0.1', classMethod='com.yang.blog.web.IndexController.newblogs', args=[{}]}
2020-05-25 16:33:46.339  INFO 21312 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:46.339  INFO 21312 --- [http-nio-8080-exec-6] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn _fragments :: newblogList
2020-05-25 16:33:46.620  INFO 21312 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : Request: RequestLog{url='http://127.0.0.1:8080/comments/65', ip='127.0.0.1', classMethod='com.yang.blog.web.CommentController.comments', args=[65, {}]}
2020-05-25 16:33:46.623  INFO 21312 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfter
2020-05-25 16:33:46.623  INFO 21312 --- [http-nio-8080-exec-9] com.yang.blog.aspect.LogAspect           : -------------doAfterReturn blog :: commentList
2020-05-25 16:34:54.803  INFO 9392 --- [main] com.yang.blog.BlogApplicationTests       : Starting BlogApplicationTests on DESKTOP-IHFCB9J with PID 9392 (started by hasaki in C:\Users\hasaki\IdeaProjects\blog)
2020-05-25 16:34:54.816 DEBUG 9392 --- [main] com.yang.blog.BlogApplicationTests       : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-25 16:34:54.817  INFO 9392 --- [main] com.yang.blog.BlogApplicationTests       : The following profiles are active: dev
2020-05-25 16:34:56.639  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:34:56.644  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:34:56.852  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:34:56.857  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:34:56.867  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:34:56.874  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:34:56.884  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-05-25 16:34:56.890  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 233ms. Found 0 Elasticsearch repository interfaces.
2020-05-25 16:34:56.919  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:34:56.921  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-05-25 16:34:56.969  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:34:56.971  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:34:56.972  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:34:56.976  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:34:56.979  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-05-25 16:34:56.979  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-05-25 16:34:57.008  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:34:57.018  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-25 16:34:57.477  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 449ms. Found 5 JPA repository interfaces.
2020-05-25 16:34:57.525  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-25 16:34:57.529  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-25 16:34:57.584  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.BlogRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:34:57.586  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.CommentRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:34:57.588  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TagRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:34:57.591  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.TypeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:34:57.594  INFO 9392 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.yang.blog.dao.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-05-25 16:34:57.595  INFO 9392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50ms. Found 0 Redis repository interfaces.
